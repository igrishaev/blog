<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ivan Grishaev's blog</title>
    <description>Writing on programming, education, books and negotiations.
</description>
    <link>https://grishaev.me/</link>
    <atom:link href="https://grishaev.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 14 Mar 2024 07:46:15 +0000</pubDate>
    <lastBuildDate>Thu, 14 Mar 2024 07:46:15 +0000</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>Вдруг изменится</title>
        <description>&lt;p&gt;Иногда мы видим замечания коллег: вдруг в будущем эта штука изменится? Давай
исправим сейчас, чтобы не возиться потом.&lt;/p&gt;

&lt;p&gt;Благие намерения, однако: коллеге кажется, а переделывать вам. Он написал
комментарий, а вам переписывать экран кода.&lt;/p&gt;

&lt;p&gt;В таких случаях попросите коллегу подтвердить свою гипотезу. Пусть вспомнит
примеры из библиотек, проектов, случаи из практики. Если найдется подтверждение,
то исправьте, иначе — нет.&lt;/p&gt;

&lt;p&gt;Важно понимать, что время, потраченное сейчас, и время, возможно, потраченное в
будущем — это разные вещи. Первое мы не нагоним никогда, второе может никогда не
наступить.&lt;/p&gt;

&lt;p&gt;Иногда коллега прикрывается тем, что печется о будущем фирмы. Разговор можно
повернуть так, что он блокирует задачу и ведет ведет нас не в то будущее. Это
помогает.&lt;/p&gt;

&lt;p&gt;Наконец, за умной гипотезой может быть банальное говноедство — емкое слово,
чтобы описать ситуацию (и человека). Но даже в этом случае мы, специалисты,
должны хранить лицо и отвечать со своего уровня.&lt;/p&gt;

&lt;p&gt;Звучит хорошо, но как бы этому следовать!&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/what-if/</link>
        <guid isPermaLink="true">https://grishaev.me/what-if/</guid>
        
        <category>updates</category>
        
        <category>life</category>
        
        
      </item>
    
      <item>
        <title>Правда</title>
        <description>&lt;p&gt;Есть фееричное по своей глупости выражение: на правду не обижаются. Это верно:
обижаются не на правду, а на бестактность, грубость, фамильярность, непрошенное
мнение и все то, что сопутствует правде.&lt;/p&gt;

&lt;p&gt;Если собеседник обижается на правду, стоит подумать, как лучше ее донести и
вообще — стоит ли ее доносить.&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/truth/</link>
        <guid isPermaLink="true">https://grishaev.me/truth/</guid>
        
        <category>life</category>
        
        <category>truth</category>
        
        
      </item>
    
      <item>
        <title>Дело раскрыто</title>
        <description>
&lt;p&gt;Однажды я писал о том, что &lt;a href=&quot;/slack-outdated/&quot;&gt;Слак отказался работать&lt;/a&gt; с
интересной формулировкой: устарела операционная система. Я обновил приложение,
но не помогло. Очевидно, Слак захотел доступ к какой-то функции, которой нет в
текущей операционке. Я решил, что эта функция нужна маркетингу или “более
удобным” обновлениям.&lt;/p&gt;

&lt;p&gt;Так и вышло!&lt;/p&gt;

&lt;p&gt;На ноуте, которым я пользуюсь реже всего, я обновился по самые помидоры, чтобы
знать, к чему готовиться. Накатил операционку, Слак и прочий хлам. И вот что
происходит: когда Слак находит обновление, он хочет поставить его автоматом. Но
не хватает прав, и выскакивает такая модалка:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/slack-outdated/1.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Приложи пальчик, а дальше я сама.&lt;/p&gt;

&lt;p&gt;Эта модалка действует на всю систему. Она вылазит не в Слаке, а на уровне
операционки. Если бы пишете код, шарите экран, смотрите ютучик — будте готовы,
что в любой момент она вылезет и потребует реакции.&lt;/p&gt;

&lt;p&gt;На минуточку: она загораживает все! Вот такой прикол. Через час после закрытия
Слак проделает то же самое, и модалка вылезет опять.&lt;/p&gt;

&lt;p&gt;Разумеется, никаких настроек, чтобы это отключить, нет. С трудом нахожу слова в
адрес людей, кто программировал эту дичь. Взята новая высота — или, скорее,
пробито дно.&lt;/p&gt;

&lt;p&gt;Но есть способ. Помните я писал про &lt;a href=&quot;/firewall/&quot;&gt;фаервол Lulu&lt;/a&gt;? С его помощью я
отбираю у программ доступ в сеть, в том числе — к обновлениям. Оказалось, нужно
добавить запрет как на картинке, и готово — доступа к обновлениям нет, модалка
не появляется.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/slack-outdated/2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Все довольны, все смеются. Но блядским Слаком все равно стараюсь пользоваться
реже.&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/slack-update/</link>
        <guid isPermaLink="true">https://grishaev.me/slack-update/</guid>
        
        <category>slack</category>
        
        <category>updates</category>
        
        
      </item>
    
      <item>
        <title>Сервисы</title>
        <description>&lt;p&gt;Приходилось работать в проекте со множеством сервисов. Решил пожаловаться, какое
же это неблагодарное дело — выскребать данные по углам, чтобы собрать конфету.&lt;/p&gt;

&lt;p&gt;Ощущение, что сервисы делают люди, лишенные эмпатии. Например, есть метод
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get-by-id&lt;/code&gt;, чтобы взять сущность по айдишке. Угадайте, сколько сервисов
поддерживают &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get-by-idS&lt;/code&gt; — получить список по айдишкам? В лучшем случае
половина. У оставшейся половины &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get-by-ids&lt;/code&gt; возвращает сущности порциями по
сто. Тебе нужно 250? Пиши обертку с пагинацией, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;next-page&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;limit/offset&lt;/code&gt;, вот
это все.&lt;/p&gt;

&lt;p&gt;Вызывал сервис несколько тысяч раз? Начинаются разборки “кто нас
дидосит”. Вызывай редко, не больше десяти раз, а еще лучше никогда. И везде
проблемы с сообщением об ошибке. Передал что-то не то — иди смотри логи.&lt;/p&gt;

&lt;p&gt;Я согласен с тем, что логику нужно разносить по сервисам. Но сервисы должны
использовать общую шину данных: базу, очередь сообщений, файлы в S3 в конце
концов. Гонять друг другу JSON выглядит хорошо в теории, но на практике — фу.&lt;/p&gt;

&lt;p&gt;Условный Постгрес выплюнет миллион записей за доли секунды. Забрать этот же
миллион из другого сервиса — приключение на неделю. Тут и метрики, лимиты,
квоты, сетевые спайки, etc… А когда таких запросов несколько, сервис ложится
спать.&lt;/p&gt;

&lt;p&gt;Эти сервисы напоминают современного айтишника: хрупкого, тряпковатого мужчину 25
лет, который чуть что — выгорает. У которого все токсичны и вообще — отстаньте.&lt;/p&gt;

&lt;p&gt;Удивляет, что подобные архитектуры строятся намеренно, и их создателям платят
большие деньги. При этом опция “легкий доступ к данным” в архитектуру не входит.&lt;/p&gt;

&lt;p&gt;А мне разгребать.&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/services/</link>
        <guid isPermaLink="true">https://grishaev.me/services/</guid>
        
        <category>services</category>
        
        <category>programming</category>
        
        
      </item>
    
      <item>
        <title>Карго-культ (2)</title>
        <description>&lt;p&gt;В комментариях к &lt;a href=&quot;/kargo-1/&quot;&gt;прошлой заметке&lt;/a&gt; один из читателей заметил, что
эксперимент с обезьянами — выдумка и никогда не проводился. Похоже, он прав!&lt;/p&gt;

&lt;p&gt;Впервые эксперимент упоминется в книге &lt;a href=&quot;https://www.amazon.com/dp/0875847161&quot;&gt;Competing for the Future&lt;/a&gt; by Gary
Hamel and C. K. Prahalad. Вот дословная цитата:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;4 monkeys in a room. In the center of the room is a tall pole with a bunch of
bananas suspended from the top. One of the four monkeys scampers up the pole and
grabs the bananas. Just as he does, he is hit with a torrent of cold water from
an overhead shower. He runs like hell back down the pole without the
bananas. Eventually, the other three try it with the same outcome. Finally, they
just sit and don’t even try again. To hell with the damn bananas. But then, they
remove one of the four monkeys and replace him with a new one. The new monkey
enters the room, spots the bananas and decides to go for it. Just as he is about
to scamper up the pole, the other three reach out and drag him back down. After
a while, he gets the message. There is something wrong, bad or evil that happens
if you go after those bananas. So, they kept replacing an existing monkey with a
new one and each time, none of the new monkeys ever made it to the top. They
each got the same message. Don’t climb that pole. None of them knew exactly why
they shouldn’t climb the pole, they just knew not to. They all respected the
well established precedent. EVEN AFTER THE SHOWER WAS REMOVED!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Эксперимент зашел публике, и его стали широко использовать. Позже несколько
людей пытались узнать подробности: кто и когда проводил этот эксперимент. Но
один из авторов умер, а второй отвечал отписками через секретаря. Самое
интересное, что удалось из него выжать:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Our apologies, but Professor Hamel does not have the original source
information at hand in terms of your request.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Похоже, эксперимент был выдуман авторами, чтобы придать вес другой
идее. Возможно, они слышали что-то краем уха от зоологов, а остальное
додумали. Надо иметь в виду, что книга написана в 1996 году, когда интернет был
убогим, и проверить информацию было невозможно.&lt;/p&gt;

&lt;p&gt;Напоминает историю про 25 кадр, который, в отличие от обезьян, был полностью
развенчан.&lt;/p&gt;

&lt;p&gt;Я получил урок, что все популярные истории нужно проверять. Не так уж и трудно
было погуглить несколько минут. Александру, который написал об этом, больше
спасибо.&lt;/p&gt;

&lt;p&gt;См. обсуждение на &lt;a href=&quot;https://skeptics.stackexchange.com/questions/6828/was-the-experiment-with-five-monkeys-a-ladder-a-banana-and-a-water-spray-condu&quot;&gt;Stack Exchange&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/kargo-2/</link>
        <guid isPermaLink="true">https://grishaev.me/kargo-2/</guid>
        
        <category>kargo</category>
        
        <category>cult</category>
        
        <category>monkeys</category>
        
        
      </item>
    
      <item>
        <title>Карго-культ (1)</title>
        <description>&lt;p&gt;Возможно, не все знают, как работает карго-культ у обезьян. А это очень
интересно.&lt;/p&gt;

&lt;p&gt;В вольер с обезьянами вешают приманку: всякие сласти и ништяки. Если к ней
притронуться, обезьян обливают холодной водой. Из-за своей физиологии им это
очень неприятно, гораздо неприятней, чем людям.&lt;/p&gt;

&lt;p&gt;Обезьяны быстро понимают, что приманку трогать нельзя. Когда в вольер
подсаживают новую обезьяну, старожилы запрещают ей приближаться к приманке.&lt;/p&gt;

&lt;p&gt;Дальше самое интересное: постепенно из вольера убирают обезьян, которых
обливали. Остаются те, которым только запрещали трогать приманку, но которые не
знают последствий. И все равно: они рьяно запрещают подходить к приманке
новичкам.&lt;/p&gt;

&lt;p&gt;Мораль — команда не должна быть обезьянами в вольере. Все запреты нужно время от
времени пересматривать, чтобы не растить карго-культ. Удивляет, как часто я
слышу объяснение в духе “мы делаем так, потому что мы так делаем”. Пусть не все,
но некоторое из этого нужно сесть и пересмотреть.&lt;/p&gt;

&lt;p&gt;Сказанное не значит, что нужно быть бунтарем и расшатывать основы. Здоровый
баланс между крайностями — вот что нужно соблюдать.&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/kargo-1/</link>
        <guid isPermaLink="true">https://grishaev.me/kargo-1/</guid>
        
        <category>kargo</category>
        
        <category>cult</category>
        
        <category>monkeys</category>
        
        
      </item>
    
      <item>
        <title>Лук</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/static/aws/google-look/1.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Что ж, таки подъехал новый лук от Гугла. И не соврали: современный и
прочувственный, что бы это ни значило.&lt;/p&gt;

&lt;p&gt;Главное, теперь мы знаем: форму даже с одним импутом можно растянуть на 80
процентов площади. Дизайнерам воздушных интерфейсов взять на заметку.&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/google-look/</link>
        <guid isPermaLink="true">https://grishaev.me/google-look/</guid>
        
        <category>google</category>
        
        <category>interface</category>
        
        <category>io</category>
        
        
      </item>
    
      <item>
        <title>Firefox и обновления</title>
        <description>&lt;p&gt;У меня сложные отношения с Firefox. Все как в песне: мое тело говорит да, но мое
сердце говорит нет. Иногда я пытаюсь начать с чистого листа, но Firefox делает
все, чтобы этого не случилось.&lt;/p&gt;

&lt;p&gt;Когда вышел Хром, он поразил меня отладочной консолью. Сегодня это норма, но
тогда, десять лет назад, нигде не было такого легкого доступа к сетевым
запросам, логам и реплу Javascript. В FF было что-то на голову ниже, но в виде
плагина, а тут — из коробки. Пока писал, вспомнил — Firebug, вот как он
назывался.&lt;/p&gt;

&lt;p&gt;Когда FF догнал Хром плане консоли, я пользовался им какое-то время. Потом
устроился в фирму, где были токены Yubikey. В Хроме они работали из коробки, а
что в FF? Надо скачать и поставить OpenSCP, затем добавить девайс в FF и
прописать путь к бинарнику. Сам он не может. В итоге худо-бедно работало, но с
перебоями и перезапуском браузера. Вернулся в Хром.&lt;/p&gt;

&lt;p&gt;Сегодня я работаю в фирме, где тоже выдают Yubikey. Я открыл FF, и он сходу
кидает модалку, которая просит пароль к токену. Минуточку, кто тебя просил? Нет
ни одной вкладки, которая просит авторизации. Зачем кидаешь модалку? Тем более
что токен нужен bash-скрипту для VPN, а в браузере он не используется. Какой-то
бред.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/ff-updates/1.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ладно, стерпим и это. Но с какой-то версии FF запретил опцию “не ставить
обновления”. Либо они ставятся автоматом, либо браузер долбит мозг постоянной
плашкой “вышел апдейт, поставь немедленно”. А у меня пунктик — если программа
кричит об обновлениях, я либо отключаю их, либо не пользуюсь программой. И
отключить никак не выходит.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/ff-updates/2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Я пошел в &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;about://config&lt;/code&gt; и прошелся по всем атрибутам, содержащим “update” в
названии. Таковых нашлось штук двадцать. Менял так и этак, ставил 0, -1 и false
— ничего не помогает. Проклятая плашка регулярно вылазит.&lt;/p&gt;

&lt;p&gt;Похоже, опять не судьба выстроить отношения с FF, но я все-таки спрошу. Как в FF
ставить обновления по требованию? Чтобы я нажал “install update” и оно
обновилось, а до этого молчало? Неужели Firefox, наше все, звезда опенсорса и все
такое, больше на это не способен?&lt;/p&gt;

&lt;p&gt;Верю, что способен. Вам слово.&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/ff-update/</link>
        <guid isPermaLink="true">https://grishaev.me/ff-update/</guid>
        
        <category>firefox</category>
        
        <category>updates</category>
        
        
      </item>
    
      <item>
        <title>Firefox и полиси</title>
        <description>&lt;p&gt;На выходных посидел с Firefox. Понял, как заблокировать обновления, а также
много чего другого.&lt;/p&gt;

&lt;p&gt;Если коротко: демократия закончилась. Начиная с какой-то версии Firefox перешел
на систему полиси для расширенных настроек. Редактор about:config по-прежнему
работает, но нужно понимать: многие опции теперь — бутафория. Можете до
посинения что-то включать и выключать, эффекта не будет.&lt;/p&gt;

&lt;p&gt;Теперь Firefox работает с полиси. Это JSON-файл с директивами, которые включают
ту или иную функцию. По сравнению с about:config преимущество в коллекциях: в
полиси можно задать массив объектов, например, для настройки расширений или
mime-типов, а в &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;about:config&lt;/code&gt; все было плоским.&lt;/p&gt;

&lt;p&gt;Полиси описаны в формате JSON, но на Маке используется яблочный формат plist.
Может быть, JSON тоже можно, но я не проверял.&lt;/p&gt;

&lt;p&gt;Преимущество полиси в том, что можно задать поведение браузера до последних
мелочей. И все это — в текстовом файле, который хранится в Github. Не нужна
облачная учетка для синхронизации — вы сами решаете, как раскидывать файл по
машинам. Я положил в приватный dotfiles, но приведу копию ниже.&lt;/p&gt;

&lt;p&gt;Firefox не пытается оспорить то, что указано в полиси. Если сказано не ставить
обновления — он не ставит. Сказано не проверять браузер по умолчанию — не
проверяет. Никаких попапов, бейджей, нотификаций, алертов, всплывающих полосок и
прочей ахинеи.&lt;/p&gt;

&lt;p&gt;Теперь технические шаги. Все примеры будут под мак; на другие системы, думаю,
переложить будет не трудно.&lt;/p&gt;

&lt;p&gt;Firefox ищет полиси в разных местах, но самое очевидное — файл &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/Library/
Preferences/org.mozilla.firefox.plist&lt;/code&gt;. Опция &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EnterprisePoliciesEnabled&lt;/code&gt;
означает, использовать ли полиси или пропускать их. Установите ее в истину
командой:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;defaults write ~/Library/Preferences/org.mozilla.firefox EnterprisePoliciesEnabled -bool  TRUE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Обратите внимание, что расширение &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.plist&lt;/code&gt; указывать не нужно.&lt;/p&gt;

&lt;p&gt;Чтобы выключить обновления, задайте &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DisableAppUpdate&lt;/code&gt; в истину:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;defaults write ~/Library/Preferences/org.mozilla.firefox DisableAppUpdate -bool true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Перезапустите браузер и откройте About Firefox или настройки — там будет
следующее:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/ff-policy/1.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/ff-policy/2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Обновления запрещены, никто не пройдет.&lt;/p&gt;

&lt;p&gt;Список полиси можно посмотреть во вкладке &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;about:policies&lt;/code&gt;. Выглядит так:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/ff-policy/3.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Назревает два вопроса. Первый: как узнать, какие полиси есть в принципе и их
значения? Второй: ты предлагаешь вводить их в консоли вручную?&lt;/p&gt;

&lt;p&gt;Полный список полиси находится &lt;a href=&quot;https://mozilla.github.io/policy-templates/&quot;&gt;на этой странице&lt;/a&gt;, и он довольно
велик. Проще скачать заголовку под вашу систему и поправить руками. Названия
директив говорят сами за себя.&lt;/p&gt;

&lt;p&gt;По второму пункту — разумеется, нужно создать файл в редакторе, но в случае с
plist есть нюанс. Файлы plist бывают двух форматов: текстовый и бинарный. В
первом случае это XML с тегами &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;plist&amp;gt;&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;dict&amp;gt;&lt;/code&gt; и &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;key&amp;gt;&lt;/code&gt;. Во втором случае
там байты вперемешку с текстом.&lt;/p&gt;

&lt;p&gt;Беда в том, что Firefox работает только с бинарным plist: если положить
текстовый, он его игнорирует. Бинарник можно поправить в XCode, но это неудобно:
не станете же вы хранить бинарь в Github и редактировать программой, которой
нужно 15 гигов. К счастью, утилита plutil умеет импорт-экспорт, а заодно
проверяет формат на корректность.&lt;/p&gt;

&lt;p&gt;У меня получилась папка в dotfiles со следующими файлами. Прежде всего это
org.mozilla.firefox.plist, который я &lt;a href=&quot;https://gist.github.com/igrishaev/4e0603f0129a62c335f2f38676059753&quot;&gt;выложил в Gist&lt;/a&gt;. Вот неполный список
того, что он делает:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;отключает обновления&lt;/li&gt;
  &lt;li&gt;отключает проверку браузера по умолчанию&lt;/li&gt;
  &lt;li&gt;отключает менеджер паролей, мастер-пароль&lt;/li&gt;
  &lt;li&gt;отключает Pocket&lt;/li&gt;
  &lt;li&gt;убирает партнерские ссылки, top-sites и прочий шлак на главной&lt;/li&gt;
  &lt;li&gt;открывает PDF-файлы в Preview.app. Для меня это важно, потому что встроенные&lt;/li&gt;
  &lt;li&gt;открывашки PDF, как правило, убогие&lt;/li&gt;
  &lt;li&gt;отключает всякий трекинг и фингерпринт&lt;/li&gt;
  &lt;li&gt;включает запросы нотификаций, локиции&lt;/li&gt;
  &lt;li&gt;блокирует попапы&lt;/li&gt;
  &lt;li&gt;отключает “что новенького”, рекомендованные расширения, фичи.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Второй файл — конфиг Make, чтобы управлять конфигурацией. Он короткий,
приведу полностью:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DOMAIN = ~/Library/Preferences/org.mozilla.firefox.plist
SOURCE = org.mozilla.firefox.plist

policy-import: policy-check
 defaults import ${DOMAIN} ${SOURCE}

policy-false:
 defaults write ${DOMAIN} EnterprisePoliciesEnabled -bool FALSE

policy-true:
 defaults write ${DOMAIN} EnterprisePoliciesEnabled -bool TRUE

policy-check:
 plutil ${SOURCE}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Команда &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;policy-import&lt;/code&gt; переносит настройки из текстового .plist-файла в бинарный в
домашней папке. Она зависит от &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;policy-check&lt;/code&gt;, которая проверяет конфигурацию на
корректность.&lt;/p&gt;

&lt;p&gt;Команды &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;policy-false&lt;/code&gt; и &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;policy-true&lt;/code&gt; отключают и включают полиси. Дело в том,
что пока они включены, вы не можете обновиться даже если захотите — функция
запрещена. Чтобы это сделать, отключите полиси, перезапустите браузер,
обновитесь, затем снова включите. На короткое время ужаснитесь тому, как жили
раньше: браузер выплюнет сто попапов, что пора обновиться, сделать его главным
по умолчанию, а вот здесь у нас новая менюшка, а вот новое расширение, ну и все
такое.&lt;/p&gt;

&lt;p&gt;В общем, разобраться с полиси было полезно. По аналогии с Емаксом и прочими
утилитами, я храню конфиг в дотфайлах и синхронизирую через Гитхаб. Опасение
вызывает лишь то, что полиси все еще на этапе разработки. Не ровен час,
обновишься — и все слетит.&lt;/p&gt;

&lt;p&gt;Вроде бы хороший конец, но все равно — с толикой грусти. Эта борьба вызвана тем,
что некие придурки спрятали опции из интерфейса. Не будь придурков — не было бы
суеты, конфигов и прочего. Энтропия и трение — вот есть то, что здесь описано.&lt;/p&gt;

&lt;p&gt;Напоследок — ссылки:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mozilla.github.io/policy-templates/&quot;&gt;Официальный список полиси&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/policy-templates/blob/master/mac/org.mozilla.firefox.plist&quot;&gt;Готовые шаблоны&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/igrishaev/4e0603f0129a62c335f2f38676059753&quot;&gt;Мой конфиг&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/ff-policy/</link>
        <guid isPermaLink="true">https://grishaev.me/ff-policy/</guid>
        
        <category>firefox</category>
        
        <category>policy</category>
        
        <category>updates</category>
        
        
      </item>
    
      <item>
        <title>Файлы с мака на винду</title>
        <description>&lt;p&gt;Небольшая заметка, чтобы в будущем не искать в интернете.&lt;/p&gt;

&lt;p&gt;Предположим, нужно перенести большой файл с мака на виндоуз. Сеть не настроена,
файлы не пошарены, настроить все это займет час. В распоряжении есть флешка
большой емкости, но вот засада:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;файловая система NTFS на маке работает только для чтения;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;яблочная файловая система APFS не видна в винде;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;файловая система FAT32 работает в обоих средах, но не поддерживает файлы
больше двух гигабайт.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Что же делать? Можно поставить продвинутый архиватор с поддержкой
мульти-архивов. Это когда архив делится на тома foobar.zip.01, 02 и так далее
заданной величины. Но ставить софт очень не хочется.&lt;/p&gt;

&lt;p&gt;Оказывается, все утилиты есть в коробке. На маке делаем так:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;split -b 2024m SomeMovie.mkv SomeMovie.mkv.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Последний аргумент с точкой — шаблон нарезанных кусков. К ним будут добавлены
строки aa, ab, ac и так далее для правильной сортировки. Если исходный файл был
5 гигабайтов, получатся файлы &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SomeMovie.mkv.aa&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SomeMovie.mkv.ab&lt;/code&gt; и
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SomeMovie.mkv.ac&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Скидываем все добро на флешку, и теперь с FAT32 не будет проблем, потому что
каждый кусок не превышает два гига. Чтобы собрать файл на винде, запускаем
команду:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;copy /b SomeMovie.mkv.* SomeMovie.mkv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Очевидно, это нужно делать не на флешке, а на жестком диске. Можно положить
рядом батник, если собирать будете не вы.&lt;/p&gt;

&lt;p&gt;Польза способа в том, что не нужен сторонний софт, права администратора и прочая
ахинея. Просто работает.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPD&lt;/strong&gt;: в комментариях к написли про exFat, а я про него как-то
забыл. Действительно, с ним все работает. Поэтому все, что описано выше,
пригодится, если флешка мала. Например, когда нужно перетащить файл на 16 гигов,
а флешка только два.&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/foles-mac-to-win/</link>
        <guid isPermaLink="true">https://grishaev.me/foles-mac-to-win/</guid>
        
        <category>mac</category>
        
        <category>windows</category>
        
        <category>fat32</category>
        
        
      </item>
    
  </channel>
</rss>
