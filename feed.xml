<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ivan Grishaev's blog</title>
    <description>Writing on programming, education, books and negotiations.
</description>
    <link>https://grishaev.me/</link>
    <atom:link href="https://grishaev.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 06 Jun 2025 08:14:08 +0000</pubDate>
    <lastBuildDate>Fri, 06 Jun 2025 08:14:08 +0000</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>Стереокартинки</title>
        <description>&lt;p&gt;В детстве я любил стереокартинки. У меня был альбом с ними, и я их подолгу
рассматривал. Мне казалось это магией: на плоской бумаге возникала 3D-сцена, и
это было невероятно. Были картинки, где текстура удачно совпадала с моделью, и
от этого становилось еще круче.&lt;/p&gt;

&lt;p&gt;Недавно ходили с дочкой в книжный магазин, и я купил набор карточек со
стереокартинками. Теперь сижу и рассматриваю по вечерам. Такая вот простая
радость.&lt;/p&gt;

&lt;p&gt;Оказалось, в семье никто кроме меня этого не умеет. Пытаюсь научить жену и
старших детей, но не получается (UPD: получилось). Младшая, которой три с
половиной, посмотрела на карточку и сказала: папа, что ты тут намазал?&lt;/p&gt;

&lt;p&gt;Завтра попробую другой подход. А вам вопрос: любите стереокартинки? Умеете их
смотреть?&lt;/p&gt;
</description>
        <pubDate>Sat, 31 May 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/stereo-images/</link>
        <guid isPermaLink="true">https://grishaev.me/stereo-images/</guid>
        
        <category>programming</category>
        
        
      </item>
    
      <item>
        <title>Правильное ООП</title>
        <description>&lt;p&gt;Словосочетание “правильное ООП” звучит для меня как “коренной москвич”. В
середине прошлого века кому-то было важно, приехал человек из региона или
родился в столице. А сегодня в адрес тех, кто применяет этот тезис, крутят
пальцем у виска.&lt;/p&gt;

&lt;p&gt;То же самое я чувствую, когда говорящая голова ездит по городам с лекцией о
“правильном” ООП. Тут можно сказать одно: современное программирование настолько
широко и сложно, что искать в нем “правильное” ООП — то же самое, что искать
“правильное” изложение “Колобка” или “Курочки Рябы”. Все версии правильные —
бери по вкусу.&lt;/p&gt;

&lt;p&gt;Этот тезис закрывает любую лекцию по ООП.&lt;/p&gt;
</description>
        <pubDate>Sat, 31 May 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/right-oop/</link>
        <guid isPermaLink="true">https://grishaev.me/right-oop/</guid>
        
        <category>oop</category>
        
        
      </item>
    
      <item>
        <title>Форматирование строк</title>
        <description>&lt;p&gt;Шел 2025 год, а в Питоне делают очередное форматирование строк. На этот раз оно
называется t-строки из-за префикса t. Такие строки по-настоящему всемогущи:
могут делать любые преобразования, ходить по модулям, вызывать такси и
заказывать пиццу. Без шуток, найдется тот, кто напишет на них интерпретатор
Питона.&lt;/p&gt;

&lt;p&gt;Может показаться странным, но именно из-за подобных штучек я завязал с
Питоном. Я любил его где-то до версии 2.7, ну и немного третью. Переход на
тройку был тяжелым, но необходимым, и это можно было стерпеть. А потом начались
бесконечные улучшения: новые операторы, синтаксический сахар на каждый чих,
f-строки, t-строки и так далее.&lt;/p&gt;

&lt;p&gt;Я понял, что не успеваю за Питоном. Как его ни изучай, энтузиасты навалят новых
PEP-ов. Для конкретного проекта это не страшно, но перейдешь в другой — а там
уже затянули все нововведения, и сиди разбирайся.&lt;/p&gt;

&lt;p&gt;Особенно меня коробит форматирование строк. Напомню, что в Питоне, наверное,
десять способов форматировать строки, и число вариантов все растет. Есть процент
с кортежем, есть метод &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.format&lt;/code&gt;, есть f-строки, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string.Template&lt;/code&gt;, сейчас
готовят t-строки. Это только стандартная библиотека, а еще полно сторонних
пакетов.&lt;/p&gt;

&lt;p&gt;Крафтить подобные вещи интересно, я не спорю. Но почему не нашлось никого, кто
бы сказал: братцы, мы делаем херню. Плодим одно и то же, засоряем стандартную
библиотеку. Неужели, имея с десяток способов сделать X, нужно писать еще один?
Где был это человек? Или их выгнали?&lt;/p&gt;

&lt;p&gt;Мое любимое занятие — форматировать процентом (как в Си) и выкладывать на
ревью. У питонистов начинается пожар: они говорят, что есть f-строки, что
процент использовать не надо, а почему — объяснить не могут. Со стороны кажется,
что у них чешутся внутренности: так странно они себя ведут. Если здесь
уязвимость, покажи, как она работает. Если медленно, сделай замеры. Но нет,
карго культ: мы делаем так, потому что мы так делаем.&lt;/p&gt;

&lt;p&gt;Современный Питон переусложнен. Он без конца развивается, и это обратная сторона
популярности. Как писатель, которого вынудили писать одно, хотя душа лежит к
другому. Каждый раз, когда читаю про новый оператор, думаю об одном: боже, как
хорошо, что в Кложе нет новых операторов в каждом релизе. Там все просто: хочешь
оператор — пишешь макрос, выносишь в библиотеку и делаешь анонс в Слаке. Все
довольны и ставят пальчики.&lt;/p&gt;

&lt;p&gt;Бесконтрольное развитие языка — тоже плохо. Это трудно заметить в моменте,
потому что эффект проявляет себя десятилетиями. Но нужно держать его в голове.&lt;/p&gt;
</description>
        <pubDate>Sat, 31 May 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/python-format/</link>
        <guid isPermaLink="true">https://grishaev.me/python-format/</guid>
        
        <category>programming</category>
        
        <category>python</category>
        
        <category>format</category>
        
        
      </item>
    
      <item>
        <title>Видео с митапа о Postgres и JSON</title>
        <description>&lt;p&gt;Подъехала запись, очень оперативно, как раз на выходные.  Сначала болтология
минут на 30, потом техническая демка тоже на 30 минут. Потом вопросы. В сумме
почти два часа.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;https://www.youtube.com/embed/l8__4kI4zgU&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; referrerpolicy=&quot;strict-origin-when-cross-origin&quot; allowfullscreen=&quot;&quot;&gt;
&lt;/iframe&gt;

</description>
        <pubDate>Sat, 31 May 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/pg-json-meetup/</link>
        <guid isPermaLink="true">https://grishaev.me/pg-json-meetup/</guid>
        
        <category>programming</category>
        
        <category>postgres</category>
        
        <category>sql</category>
        
        <category>json</category>
        
        
      </item>
    
      <item>
        <title>Разрешения</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/static/aws/ios-update/1.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Обновил яблочную операционку, и началось: слетели все разрешения. Каждое
приложение при запуске кукарекает: можно ли сканить локальную сеть? Можно ли
смотреть файлы в Downloads? Воткнул флешку — можно ли подключить Kingston
Datatraveler 8Gb? Воткнул микрофон — можно ли подключить микрофон?&lt;/p&gt;

&lt;p&gt;Причем это было минорное обновление (последняя правая цифра).&lt;/p&gt;

&lt;p&gt;Увы, в 2025 году обновления по-прежнему ломают то, что работало до них. Что у
Микрософта, что у Гугла, что у Эпла. Все одинаково хороши. Или это нарочно?&lt;/p&gt;
</description>
        <pubDate>Sat, 31 May 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/ios-update/</link>
        <guid isPermaLink="true">https://grishaev.me/ios-update/</guid>
        
        <category>programming</category>
        
        
      </item>
    
      <item>
        <title>Большой запрос</title>
        <description>&lt;p&gt;Последние дни я безвылазно сижу в PGAdmin: пишу запрос, чтобы построить важный
репорт. В нем уже 470 строк плюс понадобились пять функций для разных
преобразований (например денег, округления дат). Итого 550 строк чистого скуля.&lt;/p&gt;

&lt;p&gt;Не знаю, что обо мне скажут коллеги, когда это увидят. Наверное, проклянут и
будут правы. Но дело в том, что у меня началась профдеформация: мне уже легче
писать на SQL, чем на Кложе.&lt;/p&gt;

&lt;p&gt;Со временем понимаешь следующий момент. В SQL любое значение — это таблица, а
операторы — различные JOIN-ы: левое, правое, внутреннее или декартово
произведение. Как только пришел к этому, мышление поворачивается под другим
углом.&lt;/p&gt;

&lt;p&gt;Скажем, вот список мап в Кложе:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[{:id 1 :name &quot;Ivan&quot;}
 {:id 2 :name &quot;Huan&quot;}
 {:id 3 :name &quot;Juan&quot;}]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;То же самое в SQL:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;id name
 1 Ivan
 2 Huan
 3 Juan
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Любая операция над этим списком сводится либо к фильтрации, либо джоину, либо
агрегатной функции. Скажем, фильтрация по ID это обычный &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;where&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;То же самое, что написать:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(filter #(&amp;gt; % 2) users)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Предположим, есть список мап вида “пользователь -&amp;gt; аватар”. В SQL его легко
выразить таблицей:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;photo_url&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;://test.com/avatar.jpg&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;://test.com/cat.jpg&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;А вот их различные объединения: с сохранением левой части (пользователи без
аватары останутся):&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;photo_url&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;photos&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;photo_url&lt;/span&gt;
 &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ivan&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;avatar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jpg&lt;/span&gt;
 &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Huan&lt;/span&gt;
 &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Juan&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jpg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;и без:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;photo_url&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;photos&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;photo_url&lt;/span&gt;
 &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ivan&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;avatar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jpg&lt;/span&gt;
 &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Juan&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jpg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;В общих словах, любой SQL-оператор сводится к джоину. Скажем, новички часто
передают список айдишников с оператором IN:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;И не знают, что гораздо эффективнее выразить то же самое джоином и таблицей с
полем &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_ids&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;В SQL даже одно значение является таблицей. Переменная &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x=42&lt;/code&gt; — это таблица с
колонкой &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;X&lt;/code&gt; и кортежем &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(42, )&lt;/code&gt;. Примерно как в Матлабе все является матрицей.&lt;/p&gt;

&lt;p&gt;Есть расхожее мнение, что джоины тормозят, но вообще говоря это неправда. Джоины
очень эффективны. Почти любой оператор можно ускорить, если свести его к джоину
с другой таблицей. Если связующее поле индексировано, это будет быстро: почти
как выборка. Важно, что выборка проекции двух и более таблиц быстрее, чем две
отдельные выборки и обработка их силами Питона или другого языка.&lt;/p&gt;

&lt;p&gt;Мышление таблицами и их проекциями — очень крутая вещь. Не знаю, во что это
выльется, но чувствую себя как десять лет назад, когда ломал мозги об Кложу
после императивного программирования. Волнует и возбуждает.&lt;/p&gt;
</description>
        <pubDate>Sat, 31 May 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/huge-sql/</link>
        <guid isPermaLink="true">https://grishaev.me/huge-sql/</guid>
        
        <category>programming</category>
        
        <category>sql</category>
        
        <category>postgres</category>
        
        <category>join</category>
        
        
      </item>
    
      <item>
        <title>Возможности JSON_TABLE</title>
        <description>&lt;p&gt;Небольшая добавка ко вчерашнему посту. Приведу пример, очень близкий к
реальности.&lt;/p&gt;

&lt;p&gt;Предположим, есть пользователи, они совершают заказы. Каждый заказ состоит из
позиций. У позиции есть стоимость и код валюты. Одна позиция может быть в евро,
вторая в долларах и так далее.&lt;/p&gt;

&lt;p&gt;Задача в том, чтобы собрать из микросервисов нужных пользователей с заказами и
позициями и составить табицу: пользователь, заказ, сумма позиций в евро. Для
конвертации валют использовать таблицу коэффициентов.&lt;/p&gt;

&lt;p&gt;Вот что получается на практике. Вы идете в микросервис А и получаете джейсончик
как на первой картинке:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/huge-sql-2/1.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Потом идете в микросервис В, чтобы получить курсы валют:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/huge-sql-2/2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Из этих данных вам предстоит слепить конфету. Имейте в виду, что на картинах —
лишь малые подмножества данных. В реальности и полей, и вложенных сущностей
больше.&lt;/p&gt;

&lt;p&gt;Первая беда в том, что данные вложены, и с ними нельзя нормально работать. Я уже
сто раз писал об этом: когда у вас мапа с вектором мап с вектором мап с вектором
мап, ни о каком удобстве не может быть и речи. Код, который обходит такое
дерево, поддерживать невозможно, неважно Питон это или Кложа. В первом случае
это будет императивный быдлокод, во втором — функциональный. Это когда код —
цепочка из десяти вызовов &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;map/mapcat/reduce/group-by&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;В Кложе есть макрос &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;for&lt;/code&gt; для декартовых произведений, но для каждого дерева
нужно писать свою логику. Универсальный вариант я пока не придумал.&lt;/p&gt;

&lt;p&gt;Вот как сделать то же самое в SQL. Загоняем оба джейсона в базу. Теперь плющим
первый функцией &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JSON_TABLE&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/huge-sql-2/3.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Получаем таблицу &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;users&lt;/code&gt;. Все плоско и декларативно. Обратите внимание на
суррогатные поля &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;order_i&lt;/code&gt; и &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pos_i&lt;/code&gt; — номера мап в массивах. Это значит, если я
захочу свернуть таблицу обратно в дерево, не будет никаких проблем.&lt;/p&gt;

&lt;p&gt;Теперь плющу курсы валют:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/huge-sql-2/4.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Потом присоединяю слева к юзерам курсы валют по их названиям. Это значит, каждая
позиция получит коэфициент ее валюты:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/huge-sql-2/5.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;И последний шаг: считаю сумму &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;price_eur&lt;/code&gt; с группировкой по пользователю и
заказу.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/huge-sql-2/6.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Готово. Самое важное: все декларативно и без циклов, без присваиваний и
аккумуляции списков. Среда, что выполняет этот код, написана на чистом Си и
многократно протестирована. Что еще нужно?&lt;/p&gt;

&lt;p&gt;Все это можно уместить в один запрос, но я специально расписал по шагам.&lt;/p&gt;

&lt;p&gt;Обратите внимание, что в списке валют специально нет одной. Это частая история с
микросервисами, когда у них неполные данные. В результате запрос не упадет с
NPE, как упал бы ваш Питон или Джава. Просто результат будет NULL, и на посчете
суммы это никак не скажется.&lt;/p&gt;

&lt;p&gt;Предлагаю вам написать то же самое на своем языке и посмотреть, что
получится. Только учтите, что вложенность может быть еще глубже, а данных
больше.&lt;/p&gt;
</description>
        <pubDate>Sat, 31 May 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/huge-sql-2/</link>
        <guid isPermaLink="true">https://grishaev.me/huge-sql-2/</guid>
        
        <category>programming</category>
        
        <category>sql</category>
        
        <category>postgres</category>
        
        <category>json</category>
        
        <category>join</category>
        
        
      </item>
    
      <item>
        <title>Покупка нот</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/static/aws/buy-notes/1.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Часто ищу маме ноты. И порой думаю: хватит шариться по ВК-помойкам, куплю за
деньги как белый человек. Открывается форма заказа. Смотрю на нее минуту и опять
иду на помойку. С такой формой я ничего не куплю. Интересно, нашелся ли
отважный, кто прошел эту форму и купил? Сомневаюсь.&lt;/p&gt;
</description>
        <pubDate>Sat, 31 May 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/buy-notes/</link>
        <guid isPermaLink="true">https://grishaev.me/buy-notes/</guid>
        
        <category>life</category>
        
        <category>notes</category>
        
        
      </item>
    
      <item>
        <title>Онлайн-книги по программированию</title>
        <description>&lt;p&gt;Вчера в одном чатике набросили сайт, и он произвел на меня впечатление. Не
совсем в хорошем ключе, но все-таки. Вот он:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://nweb42.com/&quot;&gt;Онлайн-книги по программированию&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;На сайте собраны учебники по разным языкам программирования. На главной странице
примерно 60 языков, в каждом от 20 до 50 уроков. В числе прочего есть Кложа,
Хаскель, F# и прочая экзотика.&lt;/p&gt;

&lt;p&gt;Сайт интересен следующим: на мой взгляд, он полностью сделан на
AI-утилитах. Думаю так, потому что:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;сайт максимально обезличен. Никаких контактов, имен, адресов, только почта. В
блоге не упоминаются авторы уроков; есть только абстрактные “мы”: мы обновили
сайт, мы добавили уроки и прочее.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Все уроки написаны в одинаковом нейтральном стиле. Написать столько уроков
одному человеку невозможно, а если бы это была группа авторов, стиль бы
различался.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Уроки максимально поверхностны. Дается самая базовая информация, например как
вызывать функцию. Нет пояснений, когда эта функция полезна, а когда вредна,
нет случаев из практики.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;На сайте нет регистрации и покупки уроков, нет прогресса обучения, как принято
в онлайн-школах. Все открыто, сайт зарабатывает на мобильной рекламе.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ради интереса я походил по сайту, почитал уроки по языкам, которые хорошо
знаю. Очень похоже на правду, но местами есть неточности. Например, в одном
уроке по Кложе написано, что поток создается функцией &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(Thread.)&lt;/code&gt;. Все бы
хорошо, но такой функции нет: эта форма — инициация класса &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Thread&lt;/code&gt;, краткий
вариант записи &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(new Thread ...)&lt;/code&gt;. Ну и местами похожие огрехи.&lt;/p&gt;

&lt;p&gt;При этом я нисколько не умаляю заслуг создателя сайта. Из метаданных домена
видно, что это некий Дмитрий из Казахстана. Полагаю, каждый день он генерит урок
за уроком и выкладывает на сайт, а заодно занимается продвижением. Структуру
уроков, скорее всего, подглядывает у Хекслета или в других онлайн-школах.&lt;/p&gt;

&lt;p&gt;Как относиться к подобным “учебникам”, я для себя еще не решил. Возможно,
кому-то они будут полезны в роли конспектов: все в одном месте и максимально
кратко. Но как всегда, напрягает, что продукт нейросети не
маркируется. Авторство приписано неким “мы”, которые не несут
ответственности. Если нейросеть проглючит, например выдумает функцию, которой
нет, разгребать придется вам.&lt;/p&gt;

&lt;p&gt;Тем, кому не нужны конспекты, все равно советую сходить на сайт: посмотреть как
выглядит нейро-контент. Так сказать, подучить свою сеть для выявления таких
случаев. Ну и Дмитрию из Казахстана капнет денежка за рекламу.&lt;/p&gt;
</description>
        <pubDate>Sat, 31 May 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/ai-books/</link>
        <guid isPermaLink="true">https://grishaev.me/ai-books/</guid>
        
        <category>programming</category>
        
        <category>ai</category>
        
        
      </item>
    
      <item>
        <title>Выпадашки в Телеграме</title>
        <description>&lt;p&gt;А вот прикол с выпадашками в мобильном Телеграме. Если открыть диалог в режиме
просмотра, то он будет в выпадающем окне. Точнее, их будет два: диалог и
контекстное меню. Если долбить кнопку Block User, то Телеграм выкинет
бесконечное число попапов с затемняющим слоем. При этом диалог и затеняшка будут
ПОД выпадашкой с диалогом.&lt;/p&gt;

&lt;p&gt;Когда вы закроете диалог, у вас будет сотня модальных попапов и абсолютно черный
экран. Каждый затеняет то, что под ним на 5 процентов, и они суммируются.&lt;/p&gt;

&lt;video width=&quot;1280&quot; height=&quot;720&quot; controls=&quot;&quot;&gt;
  &lt;source src=&quot;/assets/static/aws/telegram-popup/1.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;

&lt;p&gt;Лет 7 назад я делал мобильное приложение на гремучей смеси технологий: Кложа,
React.Native и Objective-C для доступа к нативным штучкам. В том числе я делал
интерфейс. И быстро понял: если лепить на каждый чих выпадашку, рано или поздно
проиграешь. Легко сделать так, что человек ушел на другой экран, а выпадашка
осталась. Либо ты не закрыл ее, и чел наспамил их триста штук.&lt;/p&gt;

&lt;p&gt;А когда выпадашка появляется из выпадашки или диалог из диалога, то это прямой
билет в ад. Исключений не бывает. Поэтому не делай выпадашки там, где можно
обойтись без них. Искренне желаю, чтобы и остальные разработчики поняли это
скорее.&lt;/p&gt;
</description>
        <pubDate>Sun, 11 May 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/telegram-popup/</link>
        <guid isPermaLink="true">https://grishaev.me/telegram-popup/</guid>
        
        <category>telegram</category>
        
        <category>ui</category>
        
        <category>popup</category>
        
        
      </item>
    
  </channel>
</rss>
