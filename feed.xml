<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ivan Grishaev's blog</title>
    <description>Writing on programming, education, books and negotiations.
</description>
    <link>https://grishaev.me/</link>
    <atom:link href="https://grishaev.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 27 Apr 2025 07:49:07 +0000</pubDate>
    <lastBuildDate>Sun, 27 Apr 2025 07:49:07 +0000</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>Три состояния</title>
        <description>&lt;p&gt;Упрощая, можно сказать, что человек бывает в трех состояниях: когда он один,
когда с кем-то наедине и когда вокруг двое и более людей. В последнем случае
неважно, сколько именно: два, три или сотня. Разница есть, но
несущественная. Поэтому рассматриваю только варианты 0, 1 и 2+.&lt;/p&gt;

&lt;p&gt;В каждом из состояний человек ведет себя по-разному. Фактически это три роли,
между которыми мы часто переключаемся.&lt;/p&gt;

&lt;p&gt;Понимание этих переключений помогает в жизни. Если человек хочет побыть один, не
лезь с разговорами. Чтение книги и просмотр фильма относятся сюда же, потому что
оба – про уход в себя.&lt;/p&gt;

&lt;p&gt;Если человек в компании, не начинай важный разговор. При свидетелях человек
думает прежде всего о том, как прикрыть свой зад и не опозориться перед
другими. Здравый смысл отодвигается на второй план: репутация важнее.&lt;/p&gt;

&lt;p&gt;Все сводится к тому, что любой разговор можно завалить, если начать его с
человеком в неподходящем состоянии. С другой стороны – почти любой разговор
можно завершить успехом, если собеседник в правильном состоянии. Осталось
понять: где, когда и с кем, а остальное просто.&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/three-states/</link>
        <guid isPermaLink="true">https://grishaev.me/three-states/</guid>
        
        <category>life</category>
        
        
      </item>
    
      <item>
        <title>Про Обсидиан</title>
        <description>&lt;p&gt;Это заметка про Обсидиан, которая не понравится никому. Тем не менее…&lt;/p&gt;

&lt;p&gt;В программе Обсидиан ничего плохого нет. Наоборот, это хорошая программа: у нее
даже есть признаки адекватности. С ней можно начать без облачной учетки, хотя
другая программа потребовала бы ее на старте и напоминала бы каждые пять минут:
дорогой, ты не авторизован! Данные пропадут, скорей оформи подписку.&lt;/p&gt;

&lt;p&gt;Меня смущает не программа Обсидиан, а ее пользователи. Здесь прямая аналогия с
механическими клавиатурами. В них нет ничего плохого, но есть пользователи,
которые годами крафтят кастомные клавиатуры и годами их обсуждают. Точно так же
пользователи Обсидиана придают много внимание тому, что этого не стоит.&lt;/p&gt;

&lt;p&gt;Обсидиан и аналоги создали некую моду: все толковые ребята ведут цифровые
заметки, &lt;a href=&quot;/zettelkasten/&quot;&gt;аналог Цеттелькассена&lt;/a&gt;. Если ты ведешь Обсидиан, ты
профессионально растешь, ты крут, свой чувак. А если нет – фу-фу.&lt;/p&gt;

&lt;p&gt;Эта мода сквозит в различных сообществах и Телеграм-каналах; об этом говорят в
комментариях ко всем статьям на тему заметок. Пишут статьи о том, как из набора
сервисов собрать свой “чемодан заметок”. В первом же комментарии упоминают
Обсидиан, и начинается срач.&lt;/p&gt;

&lt;p&gt;Обсидиан вывел в тренд некрасивую привычку: показывать всем свой граф
знаний. Подобно владельцу айфона, который только что его купил и открывает без
надобности, пользователь Обсидиана без конца смотрит на граф
заметок. Искусственно наращивает его, добавляет лишние связи, потому что теория
“чемодана” учит, что заметок без связей быть не должно. Стоит ли говорить, что
этот граф – всего лишь ментальный онанизм.&lt;/p&gt;

&lt;p&gt;Я не верю, что заметки и граф связей как-то помогают в обучении. Человек на
полном серьезе пишет, что благодаря Обсидиану “выучил” Питон. То есть он
прослушал лекции и для каждого урока составил заметки и связал их. Разумеется,
попади он в первый проект на Питоне, эти заметки пойдут лесом. Важно не
составлять заметки, а практиковать знания и закреплять их практикой. Скажем,
прослушал урок про списки в Питоне – открываешь учебник по Турбо-Паскалю и
прорешиваешь 20 задач, заменяя слово “массив” на “список”. От этого есть польза,
а от цифровой заметки – нет.&lt;/p&gt;

&lt;p&gt;То же самое пишет Барбара Оакли в книге “Думай как математик”, а также ее
колеги-преподы. Все они утверждают, что конспектирование – это хорошо, но
гораздо важнее вспоминать и пересказывать материал самому себе, а также скорее
закрепить его практикой. Без этого конспектирование дает лишь видимость изучения
и уподобляется &lt;a href=&quot;/no-book-marks/&quot;&gt;подчеркиванию в книгах&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Я с трудом представляю, для чего люди ведут заметки в Обсидиане. Изучаешь ты,
например, Питон, пишешь заметки к видеокурсу. Так заведи публичный канал в
Телеграме и пиши туда! – пусть другие тоже видят, комментируют,
поправляют. Всем польза. Для списка ссылок Обсидиан явно избыточен, подойдет
файлик или скрытый канал в Телеграме. Для списка дел и дневника подходит обычный
блокнот. Зачем брать какую-то программу?..&lt;/p&gt;

&lt;p&gt;О том, что при работе с бумагой и ручкой мозг работает по-другому, я писал сотню
раз и не буду повторять. Просто попробуйте.&lt;/p&gt;

&lt;p&gt;В книге Make Time один из авторов приводит хороший пример. Он подсел на
программу заметок, и после обновления операционки она отвалилась. Автор к тому
времени забил и обновление не выпустил. Вряд ли это случится с Обсидианом, но
тем не менее: не нужно становиться заложником софта.&lt;/p&gt;

&lt;p&gt;Верный признак того, что Обсидиан избыточен – это обилие инструментов к
нему. Фирма, которая его пишет, вынуждена тащить все подряд, чтобы удовлетворить
всех. Помните, это как вкладки в браузере? Кому-то вертикальные, кому-то
горизонтальные, по кругу, с предпросмотром, с попапом с данными о потребленной
памяти, с закрытием по таймеру и так далее.&lt;/p&gt;

&lt;p&gt;Не за горами час, когда вы обновите свой Обсидиан и обнаружите, что он стал
медленным и появились интеграции с Твиттером, Покетом и бог знает чем – все
потому, что об этом попросили упоротые клиенты, а менеджмент пошел на
поводу. Если вам это ни о чем не говорит, погуглите историю сервиса Evernote.&lt;/p&gt;

&lt;p&gt;Еще напомню про Агату Кристи, которая написала 50 томов без Обсидиана. Стивен
Кинг пользовался блокнотом: первая электронная печатная машинка (даже не
компьютер) появилась у него в зрелом возрасте. Чтобы дать что-то миру, вам не
нужна программа электронных заметок. Все уже здесь.&lt;/p&gt;

&lt;p&gt;Обсидиан сегодня – это мода. Это забавная программа вроде Майнкрафта, в которую
не зазорно играть взрослым. Строишь свой мирок, наблюдаешь прогресс, делишься
успехом с друзьями. Не возводите его в культ. Не будьте чуваком с картинки
ниже. Это пройдет.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/obsidian/1.jpeg&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/obsidian/</link>
        <guid isPermaLink="true">https://grishaev.me/obsidian/</guid>
        
        <category>obsidian</category>
        
        <category>life</category>
        
        <category>notes</category>
        
        
      </item>
    
      <item>
        <title>Программисты и бизнес</title>
        <description>&lt;p&gt;Иные говорящие головы двигают такой тезис: хороший программист по мере развития
все больше приобщается к бизнесу. Думает, как улучшить продукт, повысить
конверсии-воронки и все такое… ходит на совещания с владельцами бизнеса.&lt;/p&gt;

&lt;p&gt;Ну… не знаю. Пытался играть в эти игры, но не смог. Мне не интересен
бизнес. Не интересно, сколько пользователей привлекли, сколько уников зашло и
так далее. Не мое это, хоть убейте.&lt;/p&gt;

&lt;p&gt;Мне интересен код. Люблю делать задачу максимально просто: поменьше библиотек,
меньше сервисов, без ОРМ. Пишу тесты, добиваюсь, чтобы все случаи покрывались
локально, без облака. В общем-то и все. За это прошу лишь минимальную свободу и
право выбора технологий.&lt;/p&gt;

&lt;p&gt;И знаете, кажется, это то, чего от меня ждут. Заказчик хочет, чтобы задача была
сделана быстро и качественно, и чтобы в будущем можно было легко поправить. Это
я и делаю. Не имею понятия, кто и как пользуется моей работой, и бывает, узнаю
об этом через год.&lt;/p&gt;

&lt;p&gt;Я совершенно не сочувствую бизнесу, когда дела идут плохо. Это не мое дело. Я
работал в настолько абсурдных стартапах, что искренне недоумевал, что в них
кто-то верит. Их судьба предопределена, единственный вопрос — сколько раундов
инвестиций они протянут. И еще: сколько опыта я унесу с собой после ухода.&lt;/p&gt;

&lt;p&gt;Поэтому рассказы про лояльность бизнесу на меня не действуют. Я пишу
качественный код и получаю деньги. Если код не принес прибыли — извините, тут
помочь не могу.&lt;/p&gt;

&lt;p&gt;Вряд ли я достойный пример для подражания, но рассказы про бизнес нужно
воспринимать с прохладой. Это лапша.&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/no-business/</link>
        <guid isPermaLink="true">https://grishaev.me/no-business/</guid>
        
        <category>programming</category>
        
        <category>business</category>
        
        
      </item>
    
      <item>
        <title>Вертикальная полоса</title>
        <description>&lt;p&gt;Как-то сижу, быдлокодю понемножку и замечаю, что в редакторе включена
вертикальная полоса – ограничитель 80 символов. Думаю: странно, не помню, что
ее включал. Я таким не пользуюсь – переношу код согласно внутреннему чутью. Но
пусть будет, тем более что лень искать, как выключить.&lt;/p&gt;

&lt;p&gt;А через месяц я подвинул окно и обнаружил, что это не ограничитель, а
вертикальный ряд битых пикселей. Представьте, он не двигается за редактором и
искажает цвет в любой программе.&lt;/p&gt;

&lt;p&gt;Может быть, в прошлом я бы устроил внутреннюю истерику: как так, 4к-монитор, 144
герц, и вдруг сдох целый ряд. Но потом я подвинул редактор на место и продолжил
быдлокодить. С тех пор притворяюсь, что это ограничитель.&lt;/p&gt;

&lt;p&gt;Чем меньше истерик – как внешних, так и внутренних – тем лучше для
психики. Мне кажется, это правило продлевает жизнь, хоть и доказывать еще рано.&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/limiter/</link>
        <guid isPermaLink="true">https://grishaev.me/limiter/</guid>
        
        <category>life</category>
        
        <category>monitor</category>
        
        
      </item>
    
      <item>
        <title>JSAM: a simple JSON writer and reader</title>
        <description>
&lt;p&gt;&lt;a href=&quot;https://github.com/igrishaev/jsam&quot;&gt;JSam&lt;/a&gt; is a lightweight, zero-deps JSON parser and writer. Named after
&lt;a href=&quot;https://metalgear.fandom.com/wiki/Samuel_Rodrigues&quot;&gt;Jetstream Sam&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Small: only 14 Java files with no extra libraries;&lt;/li&gt;
  &lt;li&gt;Not the fastest one but is pretty good (see the chart below);&lt;/li&gt;
  &lt;li&gt;Has got its own features, e.g. read and write multiple values;&lt;/li&gt;
  &lt;li&gt;Flexible and extendable.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;Requires Java version at least 17. Add a new dependency:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;;; lein&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com.github.igrishaev/jsam&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; deps&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com.github.igrishaev/jsam&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:mvn/version&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Import the library:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org.some.project&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:require&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsam.core&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:as&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;reading&quot;&gt;Reading&lt;/h2&gt;

&lt;p&gt;To read a string:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/read-string&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;[42.3e-3, 123, \&quot;hello\&quot;, true, false, null, {\&quot;some\&quot;: \&quot;map\&quot;}]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0423&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:some&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;map&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To read any kind of a source: a file, a URL, a socket, an input stream, a
reader, etc:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/read&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; a file named data.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/read&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;io/input-stream&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/read&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;io/reader&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Both functions accept an optional map of settings:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/read-string&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/read&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;io/file&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is a table of options that affect reading:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;option&lt;/th&gt;
      &lt;th&gt;default&lt;/th&gt;
      &lt;th&gt;comment&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:read-buf-size&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;8k&lt;/td&gt;
      &lt;td&gt;Size of a buffer to read&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:temp-buf-scale-factor&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Scale factor for an innter buffer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:temp-buf-size&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;255&lt;/td&gt;
      &lt;td&gt;Inner temp buffer initial size&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:parser-charset&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;UTF-8&lt;/td&gt;
      &lt;td&gt;Must be an instance of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Charset&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:arr-supplier&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jsam.core/sup-arr-clj&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;An object to collect array values&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:obj-supplier&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jsam.core/sup-obj-clj&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;An object to collect key-value pairs&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:bigdec?&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Use BigDecimal when parsing numbers&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:fn-key&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keyword&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;A function to process keys&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;If you want keys to stay strings, and parse large numbers using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BigDecimal&lt;/code&gt; to
avoid infinite values, this is what you pass:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/read-string&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:fn-key&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;identity&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:bigdec?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We will discuss suppliers a bit later.&lt;/p&gt;

&lt;h2 id=&quot;writing&quot;&gt;Writing&lt;/h2&gt;

&lt;p&gt;To dump data into a string, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;write-string&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/write-string&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:hello&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;42.123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{\&quot;hello\&quot;:\&quot;test\&quot;,\&quot;a\&quot;:[1,null,3,42.123]}&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To write into a destination, which might be a file, an output stream, a writer,
etc, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;write&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/write&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data2.json&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:hello&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;42.123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; or&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/write&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;io/file&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; or&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;with-open&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;io/writer&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/write&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Both functions accept a map of options for writing:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;option&lt;/th&gt;
      &lt;th&gt;default&lt;/th&gt;
      &lt;th&gt;comment&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:writer-charset&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;UTF-8&lt;/td&gt;
      &lt;td&gt;Must be an instance of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Charset&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:pretty?&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Use indents and line breaks&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:pretty-indent&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Indent growth for each level&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:multi-separator&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\n&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;How to split multiple values&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This is how you pretty-print data:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/write&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data3.json&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:hello&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:foo&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;42.123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:pretty?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
             &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:pretty-indent&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is what you’ll get (maybe needs some further adjustment):&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;foo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                    &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;42.123&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;handling-multiple-values&quot;&gt;Handling Multiple Values&lt;/h2&gt;

&lt;p&gt;When you have 10.000.000 of rows of data to dump into JSON, a regular approach
is not developer friendly. It leads to a single array with 10M items that you
read into memory at once. Only few libraries provide facilities to read arrays
lazily.&lt;/p&gt;

&lt;p&gt;It’s much better to dump rows one by one into a stream and then read them one by
one without saturating memory. Here is how you do it:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/write-multi&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data4.json&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The second argument is a collection that might be lazy as well. The content of
the file is:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;x&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;x&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;x&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now read it back:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;doseq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/read-multi&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data4.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; {:x 0}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; {:x 1}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; {:x 2}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;read-multi&lt;/code&gt; function returns a &lt;strong&gt;lazy&lt;/strong&gt; iterable object meaning it won’t
read everything at once. Also, both &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;write-&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;read-multi&lt;/code&gt; functions are
pretty-print friendly:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;;; write&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/write-multi&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data5.json&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:pretty?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; read&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;doseq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/read-multi&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data5.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; {:x [0 0 0]}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; {:x [1 1 1]}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; {:x [2 2 2]}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The content of the data5.json file:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;x&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;x&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;x&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;type-mapping-and-extending&quot;&gt;Type Mapping and Extending&lt;/h2&gt;

&lt;p&gt;This chapter covers how to control type mapping between Clojure and JSON realms.&lt;/p&gt;

&lt;p&gt;Writing is served using a protocol named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jsam.core/IJSON&lt;/code&gt; with a single encidng
method:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;defprotocol&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IJSON&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;-encode&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The default mapping is the following:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Clojure&lt;/th&gt;
      &lt;th&gt;JSON&lt;/th&gt;
      &lt;th&gt;Comment&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;nil&lt;/td&gt;
      &lt;td&gt;null&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;String&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Boolean&lt;/td&gt;
      &lt;td&gt;bool&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Number&lt;/td&gt;
      &lt;td&gt;number&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ratio&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(/ 3 2)&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;3/2&quot;&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Atom&lt;/td&gt;
      &lt;td&gt;any&lt;/td&gt;
      &lt;td&gt;gets &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deref&lt;/code&gt;-ed&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ref&lt;/td&gt;
      &lt;td&gt;any&lt;/td&gt;
      &lt;td&gt;gets &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deref&lt;/code&gt;-ed&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;List&lt;/td&gt;
      &lt;td&gt;array&lt;/td&gt;
      &lt;td&gt;lazy seqs as well&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Map&lt;/td&gt;
      &lt;td&gt;object&lt;/td&gt;
      &lt;td&gt;keys coerced to strings&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Keyword&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;leading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt; is trimmed&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Anything else gets encoded like a string using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.toString&lt;/code&gt; invocation under
the hood:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;extend-protocol&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IJSON&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;-encode&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JsonWriter&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.writeString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is how you override encoding. Imagine you have a special type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SneakyType&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deftype&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SneakyType&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; some protocols...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsam/IJSON&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;-encode&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/-encode&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I used to be a SneakyType&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Test it:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:foo&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SneakyType&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/write-string&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/read-string&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; {:foo [&quot;I used to be a SneakyType&quot; &quot;a&quot; &quot;b&quot; 42]}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When reading the data, there is a way to specify how array and object values get
collected. Options &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:arr-supplier&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:obj-supplier&lt;/code&gt; accept a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Supplier&lt;/code&gt;
instance where the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get&lt;/code&gt; method returns instances of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IArrayBuilder&lt;/code&gt; or
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IObjectBuilder&lt;/code&gt; interfaces. Each interface knows how to add a value into a
collection how to finalize it.&lt;/p&gt;

&lt;p&gt;Default implementations build Clojure persistent collections like
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PersistentVector&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PersistenHashMap&lt;/code&gt;. There is a couple of Java-specific
suppliers that build &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ArrayList&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HashMap&lt;/code&gt;, respectively. Here is how you
use them:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/read-string&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;[1, 2, 3]&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:arr-supplier&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsam/sup-arr-java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; [1 2 3]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; java.util.ArrayList&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/read-string&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{\&quot;test\&quot;: 42}&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:obj-supplier&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsam/sup-obj-java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; {:test 42}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; java.util.HashMap&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here are some crazy examples that allow to modify data while you build
collections. For an array:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr-supplier&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reify&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java.util.function.Supplier&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;atom&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reify&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org.jsam.IArrayBuilder&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;conj&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;swap!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clojure.core/conj&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))))]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/read-string&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;[1, 2, 3]&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:arr-supplier&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr-supplier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; [10 20 30]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And for an object:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj-supplier&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/supplier&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;atom&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{})]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reify&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org.jsam.IObjectBuilder&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;assoc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;swap!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clojure.core/assoc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsam/read-string&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{\&quot;test\&quot;: 1}&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:obj-supplier&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj-supplier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; {:test 10}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;benchmarks&quot;&gt;Benchmarks&lt;/h2&gt;

&lt;p&gt;Jsam doesn’t try to gain as much performance as possible; tuning JSON reading
and writing is pretty challenging. But so far, the library is not as bad as you
might think! It’s two times slower that Jsonista and slightly slower than
Cheshire. But it’s times faster than data.json which is written in pure Clojure
and thus is so slow.&lt;/p&gt;

&lt;p&gt;The chart below renders my measures of reading a 100MB Json file. Then the data
read from this file were dumped into a string. It’s pretty clear that Jsam is
not the best nor the worst one in this competition. I’ll keep the question of
performance for further work.&lt;/p&gt;

&lt;p&gt;Measured on MacBook M3 Pro 36Gb.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/jsam/1.svg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Another benchmark made by &lt;a href=&quot;https://github.com/p-himik&quot;&gt;Eugene Pakhomov&lt;/a&gt;. Reading:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;size&lt;/th&gt;
      &lt;th&gt;jsam mean&lt;/th&gt;
      &lt;th&gt;data.json&lt;/th&gt;
      &lt;th&gt;cheshire&lt;/th&gt;
      &lt;th&gt;jsonista&lt;/th&gt;
      &lt;th&gt;jsoniter&lt;/th&gt;
      &lt;th&gt;charred&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;10 b&lt;/td&gt;
      &lt;td&gt;182 ns&lt;/td&gt;
      &lt;td&gt;302 ns&lt;/td&gt;
      &lt;td&gt;800 ns&lt;/td&gt;
      &lt;td&gt;230 ns&lt;/td&gt;
      &lt;td&gt;101 ns&lt;/td&gt;
      &lt;td&gt;485 ns&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;100 b&lt;/td&gt;
      &lt;td&gt;827 ns&lt;/td&gt;
      &lt;td&gt;1 µs&lt;/td&gt;
      &lt;td&gt;2 µs&lt;/td&gt;
      &lt;td&gt;1 µs&lt;/td&gt;
      &lt;td&gt;504 ns&lt;/td&gt;
      &lt;td&gt;1 µs&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1 kb&lt;/td&gt;
      &lt;td&gt;5 µs&lt;/td&gt;
      &lt;td&gt;8 µs&lt;/td&gt;
      &lt;td&gt;9 µs&lt;/td&gt;
      &lt;td&gt;6 µs&lt;/td&gt;
      &lt;td&gt;3 µs&lt;/td&gt;
      &lt;td&gt;5 µs&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10 kb&lt;/td&gt;
      &lt;td&gt;58 µs&lt;/td&gt;
      &lt;td&gt;108 µs&lt;/td&gt;
      &lt;td&gt;102 µs&lt;/td&gt;
      &lt;td&gt;58 µs&lt;/td&gt;
      &lt;td&gt;36 µs&lt;/td&gt;
      &lt;td&gt;59 µs&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;100 kb&lt;/td&gt;
      &lt;td&gt;573 µs&lt;/td&gt;
      &lt;td&gt;1 ms&lt;/td&gt;
      &lt;td&gt;968 µs&lt;/td&gt;
      &lt;td&gt;596 µs&lt;/td&gt;
      &lt;td&gt;379 µs&lt;/td&gt;
      &lt;td&gt;561 µs&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Writing:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;size&lt;/th&gt;
      &lt;th&gt;jsam mean&lt;/th&gt;
      &lt;th&gt;data.json&lt;/th&gt;
      &lt;th&gt;cheshire&lt;/th&gt;
      &lt;th&gt;jsonista&lt;/th&gt;
      &lt;th&gt;jsoniter&lt;/th&gt;
      &lt;th&gt;charred&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;10 b&lt;/td&gt;
      &lt;td&gt;229 ns&lt;/td&gt;
      &lt;td&gt;491 ns&lt;/td&gt;
      &lt;td&gt;895 ns&lt;/td&gt;
      &lt;td&gt;185 ns&lt;/td&gt;
      &lt;td&gt;2 µs&lt;/td&gt;
      &lt;td&gt;326 ns&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;100 b&lt;/td&gt;
      &lt;td&gt;2 µs&lt;/td&gt;
      &lt;td&gt;3 µs&lt;/td&gt;
      &lt;td&gt;2 µs&lt;/td&gt;
      &lt;td&gt;540 ns&lt;/td&gt;
      &lt;td&gt;3 µs&lt;/td&gt;
      &lt;td&gt;351 ns&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1 kb&lt;/td&gt;
      &lt;td&gt;14 µs&lt;/td&gt;
      &lt;td&gt;14 µs&lt;/td&gt;
      &lt;td&gt;8 µs&lt;/td&gt;
      &lt;td&gt;3 µs&lt;/td&gt;
      &lt;td&gt;8 µs&lt;/td&gt;
      &lt;td&gt;88 ns&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10 kb&lt;/td&gt;
      &lt;td&gt;192 µs&lt;/td&gt;
      &lt;td&gt;165 µs&lt;/td&gt;
      &lt;td&gt;85 µs&lt;/td&gt;
      &lt;td&gt;29 µs&lt;/td&gt;
      &lt;td&gt;96 µs&lt;/td&gt;
      &lt;td&gt;10 µs&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;100 kb&lt;/td&gt;
      &lt;td&gt;2 ms&lt;/td&gt;
      &lt;td&gt;2 ms&lt;/td&gt;
      &lt;td&gt;827 µs&lt;/td&gt;
      &lt;td&gt;325 µs&lt;/td&gt;
      &lt;td&gt;881 µs&lt;/td&gt;
      &lt;td&gt;88 µs&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Measured on i7-9700K.&lt;/p&gt;

&lt;h2 id=&quot;on-tests&quot;&gt;On Tests&lt;/h2&gt;

&lt;p&gt;One can be interested in how this library was tested. Although being considered
as a simple format, JSON has got plenty of surprises. Jsam has tree sets of
tests, namely:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;basic cases written by me;&lt;/li&gt;
  &lt;li&gt;a large test suite borrowed from the &lt;a href=&quot;https://github.com/cnuernber/charred&quot;&gt;Charred library&lt;/a&gt;. Many thanks
to &lt;a href=&quot;https://github.com/cnuernber&quot;&gt;Chris Nuernberger&lt;/a&gt; who allowed me to use his code.&lt;/li&gt;
  &lt;li&gt;an extra set of generative tests borrowed from the official
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;clojure.data.json&lt;/code&gt; library developed by Clojure team.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These three, I believe, cover most of the cases. Should you face any weird
behavior, please let me know.&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/jsam/</link>
        <guid isPermaLink="true">https://grishaev.me/jsam/</guid>
        
        <category>programming</category>
        
        <category>clojure</category>
        
        <category>json</category>
        
        <category>jsam</category>
        
        
      </item>
    
      <item>
        <title>Flyway</title>
        <description>&lt;p&gt;Волею судеб я использую джавную библиотеку Flyway для миграций. Должен сказать:
ее писали клоуны.&lt;/p&gt;

&lt;p&gt;Вот как это проверить: запускаем миграции на Postgres 15.8, версия Flyway
7.5.4. Все благополучно работает. А если поднять версию до последней 11.7.2,
получим исключение:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Unsupported Database: PostgreSQL 15.8&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Не менял абсолютно ничего, никаких настроек, только бампнул версию. И вот
пожалуйста.&lt;/p&gt;

&lt;p&gt;Внимание, вопрос: что же такого случилось, что Постгрес 15.8 вдруг не
поддерживается? Почему спустя три мажорных релиза он отвалился? Слишком новый?
Слишком старый? И что делать?&lt;/p&gt;

&lt;p&gt;Между прочим, Постгрес 15.8 — относительно свежий релиз (последняя версия, если
что — 17). С каких щщей он попал в немилость?&lt;/p&gt;

&lt;p&gt;Что творилось в голове у джавистов, которые писали Flyway, я ума не приложу.&lt;/p&gt;

&lt;p&gt;Мне приходилось писать свои миграционные движки, и могу сказать: да, это работа
не на один день, конечно. Хорошенько все потестить, а потом стабилизация. Но
наколбасить 11 мажорных релизов, которые вдобавок тупо не работают — это надо
уметь.&lt;/p&gt;

&lt;p&gt;Сюда же относится официальный SDK AWS на Джаве, который я уже
упоминал. Ощущение, что писали студенты или вроде того. Все аргументы
опциональны, все может быть null, в том числе бакет, который читаешь, или файл,
в которых пишешь. В рантайме ловишь сто ошибок, что это не может быть нул, то не
может и так далее. Про обязательные аргументы в Амазоне не слышали.&lt;/p&gt;

&lt;p&gt;Выпустили SDK 2, а там те же самые проблемы.&lt;/p&gt;

&lt;p&gt;Словом, ты вырос и сказка кончилась. Программист в корпорации X может получать
400 тыс. долларов в год и писать лютейший быдлокод. А нам, потребителям, с этим
жить.&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/flyway/</link>
        <guid isPermaLink="true">https://grishaev.me/flyway/</guid>
        
        <category>flyway</category>
        
        <category>postgres</category>
        
        
      </item>
    
      <item>
        <title>Кнопка Summarize</title>
        <description>&lt;p&gt;Компания Эпл следует тенденции: сует AI в каждую щель. Так, в почтовом
приложении над каждым письмом теперь кнопка “Summarize”, которая, как
предполагается, покажет краткую версию письма.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/apple-ai/1.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Разумеется, это полная шляпа. Работает только с английским текстом и
text/plain. Если вам прислали графоманию на русском, и к тому же в виде
HTML-таблиц — кнопка скажет, что “не шмогла”. В целом, эта кнопка скорее не
работает, нежели работает.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/apple-ai/2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Все, что остается пользователю — это отключить кнопку, но не все так просто. Я
снял нужную галку, кнопка пропала, но потом появилась. Может быть, нужно
перезагрузиться, но ситуация уже абсурдна.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/apple-ai/3.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Гугл и поддержка Эпла (читай — AI) как дурачки советуют снять эту галку. То, что
это не работает, никого не интересует.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/apple-ai/4.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/apple-ai/5.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Когда уже мир отпустит? Начинает немного раздражать.&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/apple-ai/</link>
        <guid isPermaLink="true">https://grishaev.me/apple-ai/</guid>
        
        <category>apple</category>
        
        <category>ai</category>
        
        
      </item>
    
      <item>
        <title>Ссылки должны быть записаны</title>
        <description>&lt;p&gt;&lt;a href=&quot;/tabs-and-bookmarks/&quot;&gt;Прошлую заметку&lt;/a&gt; можно выразить другим тезисом, а именно:
каждая ссылка должна быть записана. В файле, в задаче, в заметках, где
угодно. Когда это так, нет смысла хранить ее все время открытой.&lt;/p&gt;

&lt;p&gt;Например, мне нужно сделать что-то нетривиальное в Постгресе. Путем гугления я
нашел два ответа на StackOverflow, два раздела документации и пару чьих-то
блогов. Всего шесть ссылок. Можно хранить их открытыми все время, пока работаешь
над задачей. А можно добавить их в задачу и спокойно закрыть.&lt;/p&gt;

&lt;p&gt;Почему второй способ лучше? По многим причинам, и самая важная – взрослый,
организованный подход. Вместо того чтобы сидеть на ссылках, как царь Кощей над
златом, мы делимся ими с другими. Возможно, в будущем к этой задаче кто-то
вернется и найдет эти ссылки. Их проще скопировать и переслать. Если работа
основана на сторонних материалах (код, замеры быстродействия), я считаю
правильным ссылаться на источники, чтобы было понятно, откуда решение.&lt;/p&gt;

&lt;p&gt;В комментариях кто-то писал: моя задача требует документации, ссылок на то, се,
пятое-десятое плюс макеты в Фигме. Так добавь эти ссылки в задачу! Или ты ждешь,
что каждый участник будет искать эти ссылки? Это же свинство.&lt;/p&gt;

&lt;p&gt;Разумеется, так мало кто делает, ровно как мало кто соблюдает сетевой этикет и
правила переписки. Это тот случай, когда нужно не смотреть на других, а самому
ставить нормы поведения. Например, добавлять в задачи ссылки на все нужные
материалы и просить других делать так же. Может быть, кто-то поймет, что это
правильно.&lt;/p&gt;

&lt;p&gt;Или ты открыл десяток вкладок и тебя экстренно перекинули на другую задачу, а
она тоже требует 10 вкладок. Так и будешь хранить первые десять? Я понимаю, что
есть разные профили, окна, группировки… но не говорите, что все это работает
как надо, я даже слушать не хочу. Разве не было такого, что браузер вылетел и
все забыл? Или обновился и показывает одинокую вкладку “What’s new”?&lt;/p&gt;

&lt;p&gt;Запись ссылок важна даже если работаешь в одиночку. Скажем, пилю я свой клиент к
Постгресу и мне нужны:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ссылки на документацию&lt;/li&gt;
  &lt;li&gt;ссылки на исходники Постгреса&lt;/li&gt;
  &lt;li&gt;ссылки на чужие клиенты, чтобы подсматривать решения&lt;/li&gt;
  &lt;li&gt;вопросы на StackOverflow&lt;/li&gt;
  &lt;li&gt;всякие мейл-листы.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Поэтому я завожу в репозитории файл &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;links.md&lt;/code&gt; и пишу туда ссылки.&lt;/p&gt;

&lt;p&gt;Когда кто-то говорит, что у него пять сотен вкладок, увы, я не верю, что в них
возможен какой-то порядок. Это самообман. Все сводится к принципу: записал –
отпустил. Пока что-то не записано, оно не свободно. И мы тоже от него не
свободны.&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Apr 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/write-links/</link>
        <guid isPermaLink="true">https://grishaev.me/write-links/</guid>
        
        <category>life</category>
        
        <category>links</category>
        
        
      </item>
    
      <item>
        <title>Табы и закладки</title>
        <description>&lt;p&gt;Раз уж заговорили о браузерах, выскажу еще одну мысль.&lt;/p&gt;

&lt;p&gt;Меня удивляет, как много обсуждают табы и закладки. Когда выходит какой-нибудь
Вивальди и об этом постят новость, комментари сводятся к табам и
закладкам. Когда будут вертикальные табы? Когда группировка? Когда автозакрытие
как в расширении X? И так далее.&lt;/p&gt;

&lt;p&gt;Иногда мне даже жаль разработчиков, потому что сделать так, чтобы понравилось
всем, невозможно. Всегда найдется чудак, которому нужны табы по диагонали, в
крапинку и с синхронизацией через Амазон в докере. Приходится объяснять, что
этого не планируется, а он будет поливать разработчиков дерьмом.&lt;/p&gt;

&lt;p&gt;Поэтому расскажу, как управлять табами в любом браузере: будь то Хром, форк
Фаекфокса или что угодно. Записывайте: когда у вас много табов, зажмите клавиши
Ctrl/Command + W. Все табы закроются. После этого откройте табы, что нужны для
текущей задачи. Конец.&lt;/p&gt;

&lt;p&gt;Я использую эту схему много лет. Расплодились табы – сношу к чертям и начинаю
сначала. Не нужны расширения и синхронизации, вертикальные-горизонтальные и
прочий бред.&lt;/p&gt;

&lt;p&gt;Уже рассказывал: человек шарит экран, и у него в Хроме 30 вкладок. И не вздумай
говорить, что ты ими управляешь!!! Табы сжаты до размеров иконки – как ты
найдешь нужный таб? Только перебором: вот этот таб, ой, не тот, ой, другой, ага,
вот этот. В чем прикол тыкать каждый раз как слепой щенок? Это как набрать в
руки десять предметов и утверждать, что можешь управиться с каждым.&lt;/p&gt;

&lt;p&gt;Будь я разработчиком браузера, я бы открыто сказал: ребят, если вы держите 40
вкладок, вам нужно не расширение, а пойти прогуляться.&lt;/p&gt;

&lt;p&gt;Сюда же относятся закладки: тратят сотни часов, чтобы найти расширение и
настроить синхронизацию. А потом ноют, что в каком-то андроиде не подсосались
последние ссылки.&lt;/p&gt;

&lt;p&gt;Решение простое: храните ссылки в файлике, который синхронизируется через
Dropbox, iCloud или что там у вас. У меня это файлы &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;music.md&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;postgres.md&lt;/code&gt; и
другие. Содержимое примерно такое:&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;# Silent Hill 2 Remake OST&lt;/span&gt;
https://www.youtube.com/watch?v=UFBq69uB-es&amp;amp;list=PLjvrSyTT3pvSbHUpqC3sSC3b9Fq7NuF6b

&lt;span class=&quot;gh&quot;&gt;# J. S. Bach - Organ Works - Lionel Rogg - DISC 2/12&lt;/span&gt;
https://www.youtube.com/watch?v=rudjAUtfx-g

&lt;span class=&quot;gh&quot;&gt;# Toccata &amp;amp; Fugue in C Major, BWV 564&lt;/span&gt;
https://www.youtube.com/watch?v=kxtJ_av5NHo

&lt;span class=&quot;gh&quot;&gt;# Pink Floyd - Obscured By Clouds (1972) [Full Album]&lt;/span&gt;
https://www.youtube.com/watch?v=Te_-nISxLVI
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Поскольку это маркдаун в Емаксе, то работают всякие плюшки. Клик на ссылку
открывает ее в браузере, есть быстрый переход по заголовкам, просмотр оглавления
и так далее. Можно делать несколько уровней, например так:&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;# Ambient&lt;/span&gt;
&lt;span class=&quot;gu&quot;&gt;## Portal 2&lt;/span&gt;
&lt;span class=&quot;gu&quot;&gt;## Klaus Schulze&lt;/span&gt;
&lt;span class=&quot;gh&quot;&gt;# Rock&lt;/span&gt;
&lt;span class=&quot;gu&quot;&gt;## Queen&lt;/span&gt;
&lt;span class=&quot;gu&quot;&gt;## Pink Floyd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;и оно будет красиво отображаться в виде дерева. Но мне достаточно одного
уровня. Схема проста как лопата, в ней нечему ломаться. Обновление браузера и
расширений на нее не влияют. Что еще нужно?&lt;/p&gt;

&lt;p&gt;Конечно, кто-то всплакнет, мол, неудобно на телефоне. Ну и пусть – пока ты не
за компом, надо смотреть на солнце, а не тупить в экран. А если не дочитал
статью, то кинь ссылку себе в Телеграм, в чем проблема?&lt;/p&gt;

&lt;p&gt;Главная мысль этого поста: не быть рабом своих желаний. Хочется такие-сякие табы
и закладки – перехочется. Бери то, что не сломается ни при каких
обстоятельствах. На долгой дистанции это единственный вариант.&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Apr 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/tabs-and-bookmarks/</link>
        <guid isPermaLink="true">https://grishaev.me/tabs-and-bookmarks/</guid>
        
        <category>browsers</category>
        
        <category>tabs</category>
        
        <category>bookmarks</category>
        
        
      </item>
    
      <item>
        <title>Летнее время</title>
        <description>&lt;p&gt;Как известно, перевод часов на летнее время несет сплошную пользу. Прямо так
хорошо от него, так хорошо, что аж сам себе завидую. И под это дело потерял день
рабочего времени, и остальные тоже.&lt;/p&gt;

&lt;p&gt;На работе я занимаюсь отчетностью. В Амазоне у меня зашедулено много отчетов,
каждый из которых уходит своим потребителям. Большинство из них я сделал прошлой
осенью и зимой, когда у заказчика было время +1. А весной произошло вот что.&lt;/p&gt;

&lt;p&gt;Если не указать в Амазоне часовую зону cron-выражения, то по умолчанию берется
UTC. Это хорошо, потому что точка отсчета фиксирована. Но одно и то же время UTC
в зависимости от времени года дает разное локальное время. Например, зимой время
08:00 am UTC будет 9:00 am UTC+1, а летом – 10:00 am UTC+2.&lt;/p&gt;

&lt;p&gt;Это значит, что после перевода часов потребители получат отчеты не в 9 часов, а
в 10 по местному времени.&lt;/p&gt;

&lt;p&gt;Начались жалобы: что-то подумал, что все сломалось, кто-то не успел предоставить
отчет к созвону, где-то упал скрипт, который перекладывает отчеты в другое
место. Починил так: нужно указать под cron-выражением местную зону, например
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Europe/&amp;lt;City&amp;gt;&lt;/code&gt;, и сдвинуть часы так, чтобы они совпадали с зимним временем, по
которому работало раньше. На то, чтобы разобраться, задеплоить и проверить, ушел
день. В первый раз я поднял часы на +2 вместо +1, и пришлось переделывать.&lt;/p&gt;

&lt;p&gt;Коснулось и других коллег: Майкл, почему твоя задача запустилась на час позже? И
Майклу предстоит то же самое: считать на бумажке часы, деплоить и проверять.&lt;/p&gt;

&lt;p&gt;У меня стойкая ассоциация: каждые полгода страна садится голой задницей на
гвоздь. За полгода рана заживает, и кажется, что в этот раз обойдется без
последствий. Но нет: снова боль, снова проблемы, крики. Никогда такого не было,
и вот опять.&lt;/p&gt;

&lt;p&gt;Спрашивается: сколько можно? Сколько еще нужно выбросить времени, денег, нервов,
здоровья, чтобы чиновников отпустило? Десять лет? Сто лет? Уверен, в будущем над
нами будут смеяться: представляете, дети, эти придурки на рубеже тысячелетий
гоняли часы туда-сюда, чтобы сэкономить тысячу долларов на 20 миллионов
человек. Примерно как раньше сжигали людей, чтобы задобрить бога – с таким же
результатом.&lt;/p&gt;

&lt;p&gt;Слышал, что за перевод времени люто топил Яков Перельман. Что неудивительно:
более яростного человеконенавистника нужно еще поискать. Может, хватит брать с
него пример?&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Apr 2025 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/summer-shift/</link>
        <guid isPermaLink="true">https://grishaev.me/summer-shift/</guid>
        
        <category>life</category>
        
        <category>time</category>
        
        <category>shift</category>
        
        <category>amazon</category>
        
        
      </item>
    
  </channel>
</rss>
