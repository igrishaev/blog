<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ivan Grishaev's blog</title>
    <description>Writing on programming, education, books and negotiations.
</description>
    <link>https://grishaev.me/</link>
    <atom:link href="https://grishaev.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 23 Jan 2024 06:51:55 +0000</pubDate>
    <lastBuildDate>Tue, 23 Jan 2024 06:51:55 +0000</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>PG2 early announce and benchmarks, part 1</title>
        <description>
&lt;p&gt;&lt;em&gt;TL;DR: &lt;a href=&quot;https://github.com/igrishaev/pg2&quot;&gt;https://github.com/igrishaev/pg2&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;

    Table of Content

&lt;/h2&gt;

&lt;ul id=&quot;toc-item-pg2-bench-1&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot; id=&quot;toc-item-pg2-bench-1-introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#how-the-benchmarks-were-made&quot; id=&quot;toc-item-pg2-bench-1-how-the-benchmarks-were-made&quot;&gt;How the benchmarks were made&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#test-1-querying-a-single-column-series-based-query-with-50000-rows&quot; id=&quot;toc-item-pg2-bench-1-test-1-querying-a-single-column-series-based-query-with-50000-rows&quot;&gt;Test 1. Querying a single-column, series-based query with 50000 rows&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#benchmark-2-a-complex-multi-column-randomly-generated-select-query&quot; id=&quot;toc-item-pg2-bench-1-benchmark-2-a-complex-multi-column-randomly-generated-select-query&quot;&gt;Benchmark 2. A complex, multi-column, randomly generated SELECT query&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#test-3-querying-randomly-generated-json&quot; id=&quot;toc-item-pg2-bench-1-test-3-querying-randomly-generated-json&quot;&gt;Test 3. Querying randomly generated JSON&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#test-4-inserting-a-single-row-with-no-transaction&quot; id=&quot;toc-item-pg2-bench-1-test-4-inserting-a-single-row-with-no-transaction&quot;&gt;Test 4. Inserting a single row with no transaction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#test-5-inserting-a-row-in-a-transaction&quot; id=&quot;toc-item-pg2-bench-1-test-5-inserting-a-row-in-a-transaction&quot;&gt;Test 5. Inserting a row in a transaction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#test-6-copy-in-a-vast-csv-file-from-disk&quot; id=&quot;toc-item-pg2-bench-1-test-6-copy-in-a-vast-csv-file-from-disk&quot;&gt;Test 6. COPY IN a vast CSV file from disk&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#test-7-copy-in-a-collection-of-rows-in-csv-format&quot; id=&quot;toc-item-pg2-bench-1-test-7-copy-in-a-collection-of-rows-in-csv-format&quot;&gt;Test 7. Copy IN a collection of rows in CSV format&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#test-8-copy-in-a-collection-of-rows-in-binary-format&quot; id=&quot;toc-item-pg2-bench-1-test-8-copy-in-a-collection-of-rows-in-binary-format&quot;&gt;Test 8. Copy IN a collection of rows in binary format&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#test-9-copy-out-a-table-into-an-outputstream&quot; id=&quot;toc-item-pg2-bench-1-test-9-copy-out-a-table-into-an-outputstream&quot;&gt;Test 9. COPY OUT a table into an OutputStream&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#test-10-measuring-connection-pools&quot; id=&quot;toc-item-pg2-bench-1-test-10-measuring-connection-pools&quot;&gt;Test 10. Measuring connection pools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;During the last year, I was working on &lt;a href=&quot;https://github.com/igrishaev/pg&quot;&gt;PG&lt;/a&gt; — JDBC-free PostgreSQL driver in
pure Clojure. By purity it means, there is only a TCP socket to read and write
bytes according to the official PostgreSQL protocol, and nothing more.&lt;/p&gt;

&lt;p&gt;It was fun: the very idea of implementing something low-level in Clojure was a
challenge. I’ve made a series of tricks to squeeze the performance: mutable
collections in favour of Clojure’s ones, special macros to traverse collections
using Iterator and .forEach, and so on. After all, my driver was about 1.5 times
slower than Next.JDBC, and I still think there is room for further improvement.&lt;/p&gt;

&lt;p&gt;One may ask what is the point of making a driver from scratch in 2024. The
reason is, I’m still missing plenty of Postgres features when working with it
from Clojure. Namely:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;no built-in JSON support. In every project, I’ve got to extend some protocols
with PGObject, encode and decode the JSON manually;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;no COPY support. In Postgres, COPY IN/OUT is one of the best features I can
remember. But there is no built-in CSV nor binary encoding, for example.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Poor time support: selecting a timestamp returns an instance of
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;java.sql.Timestamp&lt;/code&gt; which is based on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;java.util.Date&lt;/code&gt;: a mutable object
deprecated in Java 1.1.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Poor array support: only a certain number of types, no multidimensional
arrays, etc.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;No built-in connection pool.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Today I deprecated the PG project in favour of &lt;a href=&quot;https://github.com/igrishaev/pg2&quot;&gt;PG2&lt;/a&gt;. This is a successor
of PG(one), my second attempt to make a JDBC-free driver for Postgres. This time
around, it’s written completely in Java with a thin Clojure layer. I’ve made
some benchmarks and it looks like PG2 2-3 times faster than Next.JDBC. There is
no documentation yet, only integration tests that cover plenty of cases (I
borrowed the old tests and improved then). Although the documentation is highly
required, I could not wait to announce PG2 and share the benchmarks.&lt;/p&gt;

&lt;h2 id=&quot;how-the-benchmarks-were-made&quot;&gt;How the benchmarks were made&lt;/h2&gt;

&lt;p&gt;I’ve got three Mac devices with core i5, i9, and ARM M1 processors. On each
device, I’ve got PostgreSQL installed. All the settings are default, no changes
are made. JVM is version 21 although the 16th is the minimum version. The
benchmarks are made with Criterium version 0.4.6.&lt;/p&gt;

&lt;p&gt;There are two types of benchmarks, actually. In the first group, I measure
query/execute functions using the Criterium framework. In the second group, I’m
running a simple HTTP server using Ring + Jetty + JSON and measuring requests
per second with Apache Benchmark (ab). For each test, I show the source code
with a chart and comments.&lt;/p&gt;

&lt;p&gt;The source code of benchmarks can be found &lt;a href=&quot;https://github.com/igrishaev/pg2/blob/master/pg-bench/src/pg/bench.clj&quot;&gt;in the repository&lt;/a&gt;.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;test-1-querying-a-single-column-series-based-query-with-50000-rows&quot;&gt;Test 1. Querying a single-column, series-based query with 50000 rows&lt;/h2&gt;

&lt;p&gt;The query:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generate_series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;JDBC.Next code:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with-title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;next.JDBC simple value select&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;with-open&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jdbc/get-connection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jdbc-config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quick-bench&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jdbc/execute!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QUERY_SELECT_RANDOM_SIMPLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:as&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rs/as-unqualified-maps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;PG2 code:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with-title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pg simple select&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/with-connection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pg-config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quick-bench&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/execute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                 &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QUERY_SELECT_RANDOM_SIMPLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pay attention that, in both cases, the connection is opened outside the
quick-bench macro. It means that the procedure of establishing a connection is
not taken into account when measuring the body of the quick-bench macro.&lt;/p&gt;

&lt;p&gt;This was my first benchmark ever made in this project, and I found the results
promising:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/pg2-bench/01.svg&quot; class=&quot;svg-chart&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2 times faster on i9, and 3 times faster on i5 and arm M1! Isn’t it great?
Getting a 200-300% performance boost when querying a database would be amazing
for web apps because they spend most of the time reading data.&lt;/p&gt;

&lt;p&gt;By the way, when measuring pure SELECT queries, PG2 is even faster than bare
JDBC. Here is the code for low-level DB access using the official PostgreSQL
Java driver:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with-title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pure JDBC simple select&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java.sql.Connection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;DriverManager/getConnection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JDBC-URL&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;USER&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;USER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PreparedStatement&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stmt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.prepareStatement&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QUERY_SELECT_RANDOM_SIMPLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quick-bench&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ResultSet&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.executeQuery&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stmt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.next&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
         &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.put&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.getString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.add&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On my i5 machine, the average time is 50 msec vs 43 in favour of PG2. My clumsy
Java code is faster than the official Postgres driver!&lt;/p&gt;

&lt;h2 id=&quot;benchmark-2-a-complex-multi-column-randomly-generated-select-query&quot;&gt;Benchmark 2. A complex, multi-column, randomly generated SELECT query&lt;/h2&gt;

&lt;p&gt;Let’s try a more complex query with integers, floats, numeric, and various
date/time types. The amount of rows is 50.000:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int4&lt;/span&gt;                  &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int8&lt;/span&gt;                  &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;numeric&lt;/span&gt;               &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;numeric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'foobar'&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100500&lt;/span&gt;               &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                    &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()::&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;              &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()::&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;              &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;                     &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;generate_series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Timings in milliseconds:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/pg2-bench/02.svg&quot; class=&quot;svg-chart&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Again, PG2 was two times faster than Next.JDBC.&lt;/p&gt;

&lt;h2 id=&quot;test-3-querying-randomly-generated-json&quot;&gt;Test 3. Querying randomly generated JSON&lt;/h2&gt;

&lt;p&gt;The query produces 50k rows of a single column; the column is a JSON object
where the values are random float values:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row_to_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generate_series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;One important note: PG2 library carries its own JSON Java module based on
&lt;a href=&quot;https://github.com/metosin/jsonista&quot;&gt;Jsonista&lt;/a&gt;. Thus, there is no need to import a third-party JSON
library and extend any protocols. For Next.JDBC, I grabbed the code specified in
the &lt;a href=&quot;https://github.com/seancorfield/next-jdbc/blob/develop/doc/tips-and-tricks.md#working-with-json-and-jsonb&quot;&gt;official documentation&lt;/a&gt;. It extends certain protocols and the
PGObject class with encode/decode logic from jsonista.&lt;/p&gt;

&lt;p&gt;Timings:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/pg2-bench/03.svg&quot; class=&quot;svg-chart&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Although the numbers are higher than before, PG2 is still two times faster.&lt;/p&gt;

&lt;h2 id=&quot;test-4-inserting-a-single-row-with-no-transaction&quot;&gt;Test 4. Inserting a single row with no transaction&lt;/h2&gt;

&lt;p&gt;Let’s prepare a table for further insertions: three fields, one of them is of a
timestamp type, and everything is not null.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exists&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;created_at&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;timestamp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Insertion query:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;created_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;PG2 benchmark code:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with-title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pg insert values&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/with-connection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pg-config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/with-statement&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stmt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QUERY_INSERT_PG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quick-bench&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rand-int&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
         &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/execute-statement&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                               &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stmt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                               &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:params&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                                         &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name%s&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                                         &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LocalDateTime/now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]}))))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next.JDBC benchmark code:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with-title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;next.JDBC insert values in TRANSACTION&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;with-open&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jdbc/get-connection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jdbc-config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quick-bench&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rand-int&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jdbc/with-transaction&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
         &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jdbc/execute!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QUERY_INSERT_JDBC&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                         &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                         &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name%s&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                         &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LocalDateTime/now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]))))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is a situation where I could not beat JDBC. The timings are equal across
all the platforms:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/pg2-bench/04.svg&quot; class=&quot;svg-chart&quot; /&gt;&lt;/p&gt;

&lt;p&gt;An interesting moment here is, I’ve got to use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pg/with-statement&lt;/code&gt; macro in
the PG2 code. It creates a prepared statement which is used later on so the
insertion query is not parsed every time you perform it. I suspect that JDBC
does the same implicitly under the hood with some sort of a cache.&lt;/p&gt;

&lt;h2 id=&quot;test-5-inserting-a-row-in-a-transaction&quot;&gt;Test 5. Inserting a row in a transaction&lt;/h2&gt;

&lt;p&gt;In both cases, the code is the same with a small change. The insertion
invocation is wrapped with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(jdbc/with-transaction [tx conn] ...)&lt;/code&gt; and
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(pg/with-tx [conn] ...)&lt;/code&gt; macros that produce BEGIN … COMMIT commands before
and after the INSERT statement. In this benchmark, PG2 is slightly faster:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/pg2-bench/05.svg&quot; class=&quot;svg-chart&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;test-6-copy-in-a-vast-csv-file-from-disk&quot;&gt;Test 6. COPY IN a vast CSV file from disk&lt;/h2&gt;

&lt;p&gt;Let’s proceed with COPY operations. First, we generate a CSV file with 1 million
rows:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
         &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
         &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LocalDateTime/now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;with-open&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SAMPLE_CSV&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                         &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;io/file&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                         &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;io/writer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;csv/write-csv&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now import this file using both libraries. PG2 code:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with-title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PG COPY in from a stream&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/with-connection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pg-config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quick-bench&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/copy-in&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                 &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QUERY_IN_STREAM&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SAMPLE_CSV&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;io/file&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;io/input-stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next.JDBC doesn’t have a wrapper for copying data. Here is a low-level code that
uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CopyManager&lt;/code&gt; class:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with-title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;JDBC COPY in from a stream&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;with-open&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jdbc/get-connection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jdbc-config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quick-bench&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CopyManager&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.copyIn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QUERY_IN_STREAM&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SAMPLE_CSV&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;io/file&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;io/input-stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The timings are pretty even:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/pg2-bench/06.svg&quot; class=&quot;svg-chart&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;test-7-copy-in-a-collection-of-rows-in-csv-format&quot;&gt;Test 7. Copy IN a collection of rows in CSV format&lt;/h2&gt;

&lt;p&gt;First, let’s discuss this case. Imagine you have a collection of rows you’d like
to COPY into a table. You cannot do it with JDBC. There is no function or a
class that takes a collection of rows and streams it as a series of CopyData
messages. I’ve got to encode these rows into a CSV file (or a buffer) and then
stream the result into the DB. This is long, it involves disk, and sometimes it
leads to weird CSV formatting. Some developers don’t use CSV libraries and just
str the data joining them with a comma. It works for plain types like numbers
and strings. But JSON, arrays, or strings with quotes always ruin this, and it
always happens when you’re in a rush.&lt;/p&gt;

&lt;p&gt;So. This benchmark does different things depending on the library we’re
testing. For PG2, it measures invocation of the pg/copy-in-rows function as
follows:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with-title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PG COPY in from rows CSV&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/with-connection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pg-config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;generate-rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quick-bench&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/copy-in-rows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QUERY_IN_STREAM&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For JDBC, it turns the rows into a CSV input stream and then sends it to the
database using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CopyManager&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;defn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rows-&amp;gt;csv-input-stream&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ByteArrayOutputStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;with-open&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;io/writer&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;csv/write-csv&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.toByteArray&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;io/input-stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with-title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;JDBC COPY in from rows CSV&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;with-open&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jdbc/get-connection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jdbc-config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;generate-rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quick-bench&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
         &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input-stream&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
               &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rows-&amp;gt;csv-input-stream&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
               &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
               &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CopyManager&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.copyIn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                    &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QUERY_IN_STREAM&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                    &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input-stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/pg2-bench/07.svg&quot; class=&quot;svg-chart&quot; /&gt;&lt;/p&gt;

&lt;p&gt;PG2 is two times faster again, and there is no need to dump the rows into a CSV
buffer.&lt;/p&gt;

&lt;h2 id=&quot;test-8-copy-in-a-collection-of-rows-in-binary-format&quot;&gt;Test 8. Copy IN a collection of rows in binary format&lt;/h2&gt;

&lt;p&gt;Most of the developers don’t know that PostgreSQL supports binary format to
transfer data. It’s more complex in terms of development but more robust. The
good news is that PG2 supports binary mode for COPY IN! This benchmark measures
the time required to insert randomly generated rows in binary mode. Here is the
code:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with-title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PG COPY in from rows BIN&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/with-connection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pg-config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;generate-rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quick-bench&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/copy-in-rows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QUERY_IN_STREAM_BIN&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:copy-bin?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                         &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:oids&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oid/int4&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oid/text&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oid/timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]})))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Since JDBC cannot binary encode data on the fly, I took the numbers from the
previous benchmark for CSV:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/pg2-bench/08.svg&quot; class=&quot;svg-chart&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One can see that, although PG2 is still faster than JDBC, binary mode beats CSV
performance. Thus, whenever you can, prefer binary COPY operations.&lt;/p&gt;

&lt;h2 id=&quot;test-9-copy-out-a-table-into-an-outputstream&quot;&gt;Test 9. COPY OUT a table into an OutputStream&lt;/h2&gt;

&lt;p&gt;This test measures the COPY … TO STDOUT … command. In both cases, I used
nullOutputStream to not depend on the disk. Code for PG2:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with-title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PG COPY out&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/with-connection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pg-config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quick-bench&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/copy-out&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QUERY_OUT_STREAM&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;OutputStream/nullOutputStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Code for Next.JDBC:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with-title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;JDBC COPY out&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;with-open&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jdbc/get-connection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jdbc-config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quick-bench&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CopyManager&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.copyOut&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                 &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QUERY_OUT_STREAM&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                 &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;OutputStream/nullOutputStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Timings:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/pg2-bench/09.svg&quot; class=&quot;svg-chart&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I was a bit surprised to see such a significant difference in performance on
core i5. Don’t know what was the reason but x2.5 times performance boost for
dumping the data is great. On other platforms, the timings are even.&lt;/p&gt;

&lt;h2 id=&quot;test-10-measuring-connection-pools&quot;&gt;Test 10. Measuring connection pools&lt;/h2&gt;

&lt;p&gt;Benching a single connection is not enough; it’s important to know how much time
it takes to borrow a connection for a pool, use it and release it afterwards.&lt;/p&gt;

&lt;p&gt;Next.JDBC has no built-in pool so I used HikariCP. Here is the code:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with-title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;JDBC pool&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;with-open&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HikariDataSource&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datasource&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cp/make-datasource&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cp-options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quick-bench&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;with-open&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jdbc/get-connection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datasource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
       &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:nothing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;PG2 code:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with-title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PG pool&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pool/with-pool&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pg-config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quick-bench&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pool/with-connection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
       &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:nothing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In both cases, pools get opened before entering the quick-bench macro. Timings:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/pg2-bench/10.svg&quot; class=&quot;svg-chart&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As a result, borrowing a connection from PG2 pool is faster.&lt;/p&gt;

&lt;p&gt;In the next post, I’m going to share HTTP benchmarks with a simple Ring
application.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(to be continued)&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 22 Jan 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/en/pg2-bench-1</link>
        <guid isPermaLink="true">https://grishaev.me/en/pg2-bench-1</guid>
        
        <category>clojure</category>
        
        <category>programming</category>
        
        <category>postgres</category>
        
        <category>sql</category>
        
        
      </item>
    
      <item>
        <title>Предновогоднее</title>
        <description>&lt;p&gt;Этот пост — просто чтобы сказать что-нибудь хорошее перед Новым годом.&lt;/p&gt;

&lt;p&gt;Спасибо всем, кто меня читает. Я отключил аналитику и не знаю, становится ли
читателей больше или меньше. Хочется верить, что кому-то все еще интересны мои
статьи. Надеюсь, это сохранится и в будущем.&lt;/p&gt;

&lt;p&gt;Недавно я перенес партию заметок и Телеграма в блог, и в комментариях упрекнули,
что много нытья про плохой софт. Я перечитал и понял, что это так. Давно
заметил: находить недостатки в чужой работе легко. Можно взять айфон и найти
сотню недостатков в интерфейсе. Это обеспечит блог постами на год вперед, но
кому интересен поток жалоб?&lt;/p&gt;

&lt;p&gt;Поэтому я решил писать меньше о проблемах софта и больше — о чем-нибудь
другом. На ум приходят такие темы:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;большой пост про майнинг с картинками. Я майнил два года, были фермы, горы
железа и прочего. Год назад я вышел из майнинга и теперь могу рассказать о
нем.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;драйвер для Постгреса. Недавно я переписал его на Джаве и теперь он в три раза
быстрее, чем next.jdbc Шона Корфилда. Пишу и сам в это не верю. Но многое
нужно поправить, прежде чем выкатить релиз.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;пост про 1С, на котором я писал года три-четыре еще в Чите. Меня задевает,
когда про 1С рассуждают те, кто знает его со слов свата кума сестры. Расскажу,
как за вечер сделать на 1С то, что фронтендеры пилят месяцами.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Всем удачи и добра, увидимся в новом году.&lt;/p&gt;
</description>
        <pubDate>Sun, 31 Dec 2023 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/pre-2024/</link>
        <guid isPermaLink="true">https://grishaev.me/pre-2024/</guid>
        
        <category>NY</category>
        
        <category>2024</category>
        
        
      </item>
    
      <item>
        <title>Плеер в Ютубе</title>
        <description>&lt;p&gt;У плеера в Ютубе серьезный косяк, от которого просто опускаются руки. Он не
целостный, а состоит из многих виджетов. При этом кнопка пробела влияет на тот
виджет, что сейчас активен.&lt;/p&gt;

&lt;p&gt;Пример: если щелкнуть по видео, фокус будет на временной шкале. Пробел ставит
видео на паузу. Если кликнуть по динамику, выключится звук, и фокус окажется на
виджете звука. Нажимая пробел, вы будете включать и выключать звук.&lt;/p&gt;

&lt;p&gt;Если кликнуть по кнопке субтитров, пробел переключится на их включение и
выключение. Аналогично с гайкой и выпадашкой из нее.&lt;/p&gt;

&lt;p&gt;Ясен хрен, так быть не должно. Пробел должен отвечать за что-то одно, а не все
разом в зависимости от того, где сейчас фокус. Это мышление кодера: да, плеер
сложный и логично, что он состоит из компонентов. Но какое мне дело как
пользователю? Представьте радиоприемник, где у кнопок разные функции в
зависимости от угла к северу или фазы Луны. А для фронтендера это — обычное
дело.&lt;/p&gt;

&lt;p&gt;Наконец, попытайтесь объяснить эти мульки пожилому родственнику или ребенку,
которого вы усадили смотреть Ютуб. И в последний момент черт дернул вас кликнуть
по виджету звука. В итоге фокус остался на нем, и каждый раз, когда родственник
жал пробел, чтобы поставить на паузу, он выключал звук.&lt;/p&gt;

&lt;p&gt;Я уже говорил, что нам не везет с фронтендерами. Почему-то они не могут сделать
нормальный интефейс, хоть в Гугле, хоть Амазоне, получая при этом космические
деньги.&lt;/p&gt;

&lt;p&gt;Чтож, подождем.&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/yt-player/</link>
        <guid isPermaLink="true">https://grishaev.me/yt-player/</guid>
        
        <category>ui</category>
        
        <category>youtube</category>
        
        
      </item>
    
      <item>
        <title>Наблюдение</title>
        <description>&lt;p&gt;Обновить программу, которая долго просит обновиться, в надежде, что она оставит
тебя в покое – то же самое, что дать денег алкашу. Через какое-то время он
придет снова, но будет просить настойчивее.&lt;/p&gt;

&lt;p&gt;Нужно расстаться раньше этого.&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/update-observation/</link>
        <guid isPermaLink="true">https://grishaev.me/update-observation/</guid>
        
        <category>update</category>
        
        <category>software</category>
        
        
      </item>
    
      <item>
        <title>Две проблемы</title>
        <description>&lt;p&gt;Говорят, в программировании две проблемы: инвалидация кэша и именование
переменных. Не знаю, я никогда не испытывал с этим проблем. Чтобы не сбрасывать
кэш, просто пиши без кэша. Проще оптимизировать SQL-запрос, чем возиться с
условным Редисом.&lt;/p&gt;

&lt;p&gt;Переменные называй как хочешь, главное — не терять темп при написании кода. Если
я думаю над именем больше секунды, то пишу foo и bar. Когда код готов,
становится ясно, во что их переименовать.&lt;/p&gt;

&lt;p&gt;Истинные две проблемы программирования другие.&lt;/p&gt;

&lt;p&gt;Первая — программист закладывает абстракции там, где не следует. Иными словами,
готовится к тому, что никогда не произойдет. Например, делает наследование из
трех классов или внедряет ОРМ на случай переезда на другую базу. И никогда не
переезжает.&lt;/p&gt;

&lt;p&gt;Вторая проблема — наоборот: программист не оставляет шанса поправить его
код. Скажем, сервис должен вернуть список сущностей, и программист честно отдает
массив в JSON. И теперь нужно добавить в ответ какую-то мету, но сделать это
нелья — у нас вектор, а не мапа. Приходится исправлять на мапу и выносить мозг
клиентам, чтобы поправили у себя.&lt;/p&gt;

&lt;p&gt;Как только первое и второе правила согласуются с реальностью, жить и работать
становится проще.&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/two-problems/</link>
        <guid isPermaLink="true">https://grishaev.me/two-problems/</guid>
        
        <category>work</category>
        
        <category>problems</category>
        
        <category>absctractions</category>
        
        
      </item>
    
      <item>
        <title>Вещи, которые должны были сделать жизнь лучше (1)</title>
        <description>&lt;p&gt;В этом посте я собирал технологии, которые должны были сделать нашу жизнь лучше,
но не срослось. Пока что это первая часть. Список далеко не полный, если у вас
есть что добавить, пишите — внесу.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Уведомления&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Идея была хорошая: программа, даже если она не запущена, показывает текст о том,
что случилось. Но уведомления приняли лавинообразный характер. Представьте, что
творится с телефоном, где 40 приложений, и каждое шлет уведомления. Большая их
часть бессмысленна и нужна только затем, чтобы пользователь открыл
программу. Поэтому первое, что делает нормальный человек при покупке телефона —
откючает весь этот зоопарк.&lt;/p&gt;

&lt;p&gt;А есть еще уведомления в браузере! Кто их там включает в здравом уме, не
представляю.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Обновления&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Мы живем в мире непрерывных обновлений. Обновляются программы, пакеты, прошивки,
операционные системы. По умолчанию обновления включены, и это настоящий ад.&lt;/p&gt;

&lt;p&gt;Редкая программа обновлятся молча. Чаще всего нам показывают модалки, которые
нельзя скрыть. Никого не волнует, что обновление одной программы сломало
другую. Обновления рушат процессы, вынуждают людей простаивать, потому что ноут
ушел в обновление. Скрипт, который стабильно работал полгода, упал из-за нового
пакета.&lt;/p&gt;

&lt;p&gt;Происходит то же самое, что с уведомлениями: когда непрерывно обновляется все,
лучше бы не обновлялось ничего.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Голосовые меню&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Верю, что за ними стояли благие намерения: дозвонился человек, а мы ему и курсы
валют расскажем, и расписание отделений, и ставки по вкладам — только нажми
кнопку. Проблема в том, что чаще всего человек звонит с одной целью — обсудить
вопрос с другим человеком. Голосовое меню становится препятствием, и
единственное, чего хочет клиент — чтобы его поскорей соединили с оператором.&lt;/p&gt;

&lt;p&gt;Например, десять вечера, ребенок заболел. Я звоню в аптеку, чтобы узнать, есть
ли то, что нужно. А там номер 8-800: сначала здравствуйте, потом свежие
предложения, перечисление пунктов меню. Оператор поддержки сидит в Туле за
тысячу километров. Какая от него может быть помощь? Поэтому я звоню только в
аптеки с городским номером.&lt;/p&gt;

&lt;p&gt;Забавно, что лет двенадцать назад я делал голосовое меню для Энергосбыта в
Чите. Находил это очень важным и полезным для абонентов.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Синтез речи&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;С обработкой речи ситуация спорная. С одной стороны, прикольно управлять Алисой:
включать музыку, спрашивать погоду и всякие мелочи. С другой стороны, технологии
речи привели к телефонному спаму. Раз в пару дней звонок из банка, где
заскриптован разговор сотрудника, предлагающего кредит. Сделано очень
реалистично: если не прислушаться, можно разговаривать с машиной, как с живым
человеком. Эту технику переняли различные мошенники, и их жертв стало больше.&lt;/p&gt;

&lt;p&gt;Фирм, которые предлагают телефонный спам, совсем немного, буквально пять. Одна
из них находится в Воронеже. У нас на митапе выступал ее основатель. Если
отбросить мыльную формулировку “оказание услуг по информированию населения
посредством телефонной и сотовой связи”, то останется то, ради чего фирма и
создавалась — спам. Так что имейте ввиду: когда вам звонит робот с предложением
списать долги, велика вероятность, что это дело рук одного хорошего воронежца.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(продолжение следует)&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/things-1/</link>
        <guid isPermaLink="true">https://grishaev.me/things-1/</guid>
        
        <category>things</category>
        
        
      </item>
    
      <item>
        <title>Картинки в Телеграме</title>
        <description>&lt;p&gt;Не устану удивляться, почему Телеграм, при всей свей крутизне, не умеет
показывать текст вперемешку с картинками.&lt;/p&gt;

&lt;p&gt;Обычный текст может. Но если добавить картинки, они соберутся в альбом и будут
сверху. При этом сработает ограничение на длину текста, и он будет выровнен по
краю картинки, то есть превратится в мышиный хвост.&lt;/p&gt;

&lt;p&gt;Почему нельзя показать абзац текста, картинку, снова абзац, снова картинку и так
далее? Я бы с радостью заплатил за это. Тут либо маркетинг, либо какие-то
тараканы в голове, потому что технических ограничений я не вижу.&lt;/p&gt;

&lt;p&gt;Вот и получается, что пост с картинками проще сверстать в Телеграфе и кинуть
ссылку, чем бодаться с Телеграмом. Редкий случай, когда фирма делает костыль для
самой себя.&lt;/p&gt;

&lt;p&gt;Все это очень странно.&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/telegram-images/</link>
        <guid isPermaLink="true">https://grishaev.me/telegram-images/</guid>
        
        <category>telegram</category>
        
        <category>images</category>
        
        <category>ui</category>
        
        
      </item>
    
      <item>
        <title>Your Steam Year In Review</title>
        <description>&lt;p&gt;Проблемы с письмами бывают не только у Госуслуг или Почты России. Стим тоже
грешит. Прислал письмо с темой “Your Steam Year In Review 2023 is Here!”. Там все
такое красивое, и жирная кнопка “See your review”:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/steam-review/1.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Жму, а там:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/steam-review/2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Что хотел сказать автор? Ваше ревью не пошарено. Что делать дальше? Надо его
пошарить? Как? Залогиниться? Зайти по ВПН? Хрен тебя разберет.&lt;/p&gt;

&lt;p&gt;Скорее всего, ревью доступно, если залогиниться. Потом можно сделать его
общедоступным, чтобы делиться в соцсетях. Но почему нельзя нормально это
объяснить? Напиши по-английски: залогинься, дорогой, и все покажем.&lt;/p&gt;

&lt;p&gt;Еще момент: почему бы не сделать одноразовую ссылку с токеном? Ведь Стим – это
настольное приложение, браузерной версией никто не пользуется. &lt;strong&gt;Вероятность
того, что человек залогинен в браузерной версии Стима, нулевая.&lt;/strong&gt; Специально
открыл ссылку на ноуте, где установлен Стим, чтобы проверить – не предложит ли
он открыть приложение? Не предложил.&lt;/p&gt;

&lt;p&gt;Знатно налажали они с письмом в этот раз.&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/steam-review/</link>
        <guid isPermaLink="true">https://grishaev.me/steam-review/</guid>
        
        <category>steam</category>
        
        <category>mail</category>
        
        
      </item>
    
      <item>
        <title>Роботы + AI</title>
        <description>&lt;p&gt;Почему каждый раз, когда речь идет об искусственном интеллекте, рисуют робота с
человеческим лицом? Того самого из “Я, робот” 2004 года в разных вариациях.
Глупо и бессмысленно.&lt;/p&gt;

&lt;p&gt;В интернете миллион этих картинок. Вот что открывается по словам “artificial
intelligence”:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/robots-ai/1.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Еще бывает железная рука с бабочкой, мозги на процессоре, но это такая пошлось,
что нет смысла и говорить.&lt;/p&gt;

&lt;p&gt;Гугл выкатил свой AI, и что показывают на презентации? Правильно, женщину-
робота:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/robots-ai/2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Дело в том, что роботы не имеют отношения искусственному интеллекту. Это только
в фильмах роботы помогают спасать галактику. А жизни роботы и интеллект —
совершенно разные вещи.&lt;/p&gt;

&lt;p&gt;Роботов программируют под узкие задачи, чтобы их поведение было
предсказуемым. Если у робота две руки для переноски ящиков, просить его сделать
кофе бессмысленно. А то, что мы называем искусственным интеллектом, живет в
видеокартах на бесчисленных стеллажах. Он знает, как сделать кофе, но у него нет
рук.&lt;/p&gt;

&lt;p&gt;Вообще, эти роботы на картинках выглядят бестолково. Почему из шеи торчат
провода и штыри? Их надо спрятать под пластик или какую-то мягкую субстанцию.
Что, не хватило материи, чтобы убрать гайки и провода под кожух? Их тела как
доспехи — как они будет гнуться? Руки, пальцы — аналогично. В 3D-Максе согнется
все, что угодно, а в реальности будут проблемы.&lt;/p&gt;

&lt;p&gt;Там у Gemini на щеке что-то отвалилось, вы поправьте, что ли.&lt;/p&gt;

&lt;p&gt;Нормальных роботов-андроидов я видел только в “Чужих”. Там они мягкие и жидкие,
как люди. Вот оно — андроиды должны быть не железными, а жидкими!  Только так
они могут хоть как-то походить на людей. Фильм “Чужой. Завет” начинается со
сцены рождения робота, и там его отливают на стенде. Буквально льют на гибкий
каркас. Но и робота в итоге не отличить от человека. Это нормальный робот, а не
железный болванчик.&lt;/p&gt;

&lt;p&gt;Наконец, всем, кто мечтает о подобных роботах, &lt;a href=&quot;https://www.youtube.com/watch?v=PqgfsPlBcYM&quot;&gt;рекомендую посмотреть&lt;/a&gt;
на Дуняшу. Это прекрасно:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/robots-ai/3.jpeg&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/robots-ai/</link>
        <guid isPermaLink="true">https://grishaev.me/robots-ai/</guid>
        
        <category>ai</category>
        
        <category>robots</category>
        
        <category>idiots</category>
        
        
      </item>
    
      <item>
        <title>Проблема и решение</title>
        <description>&lt;p&gt;Работая над задачей, важно спрашивать себя о двух вещах.&lt;/p&gt;

&lt;p&gt;Первая — какую проблему я пытаюсь решить? Удивительно, но многие не могут внятно
на это ответить. Они говорят, что делают, и это понятно: внедряют фреймворк,
пишут тесты. Но какая проблема была изначально?&lt;/p&gt;

&lt;p&gt;Из первого вопроса следует второй — как мое решение влияет на проблему? Оно
вообще ее решает? Или можно было проще? Или можно было поправить конфиг?&lt;/p&gt;

&lt;p&gt;Пишу это, потому что удивлен, как часто забывают об этих вопросах. Бывает,
проблему можно поправить функцией или макросом, но в код тянут библиотеку. Или
можно купить готовое решение, но тимлид говорит: мы напишем свое через три
месяца. Или разработчик насмотрелся видосов со свежей конфы и хочет проверить
чужие идеи.&lt;/p&gt;

&lt;p&gt;Поэтому раз: какую проблему я решаю? И два: отвечает ли ей мое решение? Чередуя
эти вопросы, можно сделать любую задачу точно и в срок.&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/problem-and-solution/</link>
        <guid isPermaLink="true">https://grishaev.me/problem-and-solution/</guid>
        
        <category>work</category>
        
        <category>problems</category>
        
        
      </item>
    
  </channel>
</rss>
