<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ivan Grishaev's blog</title>
    <description>Writing on programming, education, books and negotiations.
</description>
    <link>https://grishaev.me/</link>
    <atom:link href="https://grishaev.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 12 Nov 2024 18:15:35 +0000</pubDate>
    <lastBuildDate>Tue, 12 Nov 2024 18:15:35 +0000</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>Python Software Foundation</title>
        <description>&lt;p&gt;По мотивам событий с Линуксом обратим внимание на Питон. Итак, имеем Python
Software Foundation, некоммерческая организация, у которой на уме только добро и
радуга.&lt;/p&gt;

&lt;p&gt;Смотрим: &lt;a href=&quot;https://en.wikipedia.org/wiki/Python_Software_Foundation&quot;&gt;штаб-квартира в США&lt;/a&gt;, адрес Wilmington, Delaware, United States.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.python.org/psf/records/staff/&quot;&gt;Все руководители&lt;/a&gt; из США: на странице персонала выделяем любое имя,
копируем в Гугл и добавляем “linkedin”. Страну видно даже без перехода в
профиль.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.python.org/psf/sponsors/&quot;&gt;Ключевые спонсоры&lt;/a&gt;: NVidia, Bloomberg, Microsoft, AWS, Red Hat и
другие.&lt;/p&gt;

&lt;p&gt;Любой суд признает Питон цифровым продуктом США со всем последствиями. Не то
чтобы я об этом волнуюсь, но нужно иметь в виду: в любой момент разговоры про
опенсорс закончатся, и подключатся юристы.&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Nov 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/python-warn/</link>
        <guid isPermaLink="true">https://grishaev.me/python-warn/</guid>
        
        <category>programming</category>
        
        
      </item>
    
      <item>
        <title>Почтовые рассылки</title>
        <description>&lt;p&gt;Когда читаю рассылки Линукса или Постгреса, убеждаюсь: можно быть крутым
разработчиком, но не уметь пользоваться почтой. Напомню главный критерий:
никогда не цитировать все письмо. Нужно цитировать только то, на что конкретно
отвечаешь или то, что было давно и теперь долго искать.&lt;/p&gt;

&lt;p&gt;Цитирование всего письма — это засорение переписки и визуальный шум. Бывает,
человек отвечает двумя предложениями, а за ними борода цитат на два
экрана. Обязательно найдется чудак с консольным клиентом, который сломает
цитирование левым тегом, и оно не будет распознаваться другими клиентами.&lt;/p&gt;

&lt;p&gt;Наверное, на десять человек приходится один, у которого почта настроена
нормально. Когда я смотрю на это, думаю: ты хоть видел со стороны, как выглядит
переписка? В чем сложность зайти в опции и снять флажок, чтобы при ответе письмо
было пустым? Сегодня даже самый кривой почтовый клиент выстраивает цепочки
писем.&lt;/p&gt;

&lt;p&gt;Перечитать: &lt;a href=&quot;/mail-rules/&quot;&gt;как пользоваться почтой&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Nov 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/maillists/</link>
        <guid isPermaLink="true">https://grishaev.me/maillists/</guid>
        
        <category>programming</category>
        
        <category>email</category>
        
        <category>linux</category>
        
        
      </item>
    
      <item>
        <title>Картина с Лениным</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/static/aws/lenin-picture/1.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;В одном из чатов скинули мем. Давайте проигнорируем текстовую часть и рассмотрим
картину. Она хороша свой композицией, и сейчас я объясню почему.&lt;/p&gt;

&lt;p&gt;Композиция в живописи — это такое расположение объектов, при котором они
согласованы и уравновешены. Согласованность означает правильное расположение в
пространстве, непротиворечивость углов, света, геометрии. Уравновешенность
означает, что на каждый ключевой объект приходится парный, противоположный ему в
цвете, размере, динамике.&lt;/p&gt;

&lt;p&gt;Звучит непонятно, но вот несколько примеров. Центральный объект никогда не
находится в центре картины, потому что иначе рушится композиция. Центр — это
смерть композиции, ее тупик. Какой-то объект может быть в центре, но другие,
более важные объекты, должны оттягивать на себя внимание зрителя. Большой темный
объект можно уравновесить небольшим светлым с другой стороны. Статику
уравновешивают движением. Например, когда герой заносит меч над чудовищем, его
массу и статику уравновешивает тонкость и скорость меча.&lt;/p&gt;

&lt;p&gt;Теперь посмотрим на картину. Очевидно, Ленин — главный персонаж, но он находится
не в центре, а левее. Напротив него юноша, с которым он ведет диалог. Юноша
“подсвечен”, чтобы было понятно, к кому обращается Ленин. Их лица — ключевые
объекты картины, а между ними — указательный палец Ленина. Именно палец
находится в центре картины, как бы говоря: истина здесь. Таким образом палец и
лица по обе стороны образуют центр композиции.&lt;/p&gt;

&lt;p&gt;Другие детали: в левой части находится сцена с обилием красного: знамя и
скатерть. Этот красный уравновешен косынкой девушки справа. Ничто не мешало
сделать косынку такой же блеклой, как одежда других людей. Но она именно
красная, чтобы выступить противовесом.&lt;/p&gt;

&lt;p&gt;Геометрия: обратите внимание на положение Ленина и зрителей. Ленин отделен от
них небольшим коридорчиком, и в результате персонаж уравновешивает толпу. Если
поделить картину ровно пополам, то получится один человек против многих. Это
снова динамика, контраст величин. В целом толпа образует полукруг, все взгляды
устремлены в центр — и композиция получается замкнутой.&lt;/p&gt;

&lt;p&gt;Наверное, кто-то лучше разбирается в живописи и видит больше деталей. Но мне
хватает и этих. Не важно, какое у вас отношение к Ленину — полюбоваться картиной
стоит.&lt;/p&gt;

&lt;p&gt;Полная версия картины:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/aws/lenin-picture/2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;“В.И. Ленин среди делегатов III съезда РКСМ”. Белоусов П.П., холст, масло.&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Nov 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/lenin-picture/</link>
        <guid isPermaLink="true">https://grishaev.me/lenin-picture/</guid>
        
        <category>lenin</category>
        
        <category>art</category>
        
        <category>composition</category>
        
        
      </item>
    
      <item>
        <title>Теория Дарвина</title>
        <description>&lt;p&gt;Теория Дарвина о происхождении видов считается главенствующей, занимает
центральное место в учебниках. Но она так и не нашла поддержки в обществе. Как
двести лет назад ее не принимали, так не принимают и сейчас.&lt;/p&gt;

&lt;p&gt;Проверить это легко: спросите десять знакомых о том, что они думают о
происхождении человека. Вам ответят про инопланетян, бога, высший разум, а также
что все очень сложно. Может быть, один что-то скажет про Дарвина, но очень
неуверенно.&lt;/p&gt;

&lt;p&gt;Забавляет, что когда спрашивают про теорию Дарвина, употребляют слово
“веришь”. Ты веришь в теорию Дарвина? Для меня это звучит как “веришь в синус”
или “веришь в производную.” Все это модели, работа которых доказана — как в них
можно верить или не верить? Ну, не веришь ты в производную — это ей все равно,
ровно как и теории Дарвина.&lt;/p&gt;

&lt;p&gt;Поэтому теория Дарвина как бы с нами, но как бы и нет. Каждый изучает ее в
школе, чтобы позже переключиться на инопланетян.&lt;/p&gt;

&lt;p&gt;Интересно, думал ли Дарвин о том, сколько времени уйдет на адаптацию общества к
его теории? Сколько бы столетий он не прикинул — боюсь, он ошибался. Нужно еще.&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Nov 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/darvin/</link>
        <guid isPermaLink="true">https://grishaev.me/darvin/</guid>
        
        <category>life</category>
        
        <category>darvin</category>
        
        
      </item>
    
      <item>
        <title>Цветокоррекция</title>
        <description>&lt;p&gt;В последнее время раздражает цветокоррекция видео. Это когда накидывают слой,
под которым все становится однотонным или близко к этому. Например, серых и
металлических оттенков, бурых, цвета мокрого афальта.&lt;/p&gt;

&lt;p&gt;Поставьте любой фильм на паузу и убедитесь, что картинка выглядит как сквозь
бутылочное стекло.&lt;/p&gt;

&lt;p&gt;На Хабре была интересная статья: кто-то прогнал все фильмы о Гарри Поттере через
программу, которая строит гистограмму цветов. Не нашел ссылку, но помню красивые
гистограммы и вывод: в каждом следующем фильме коррекции становилась больше. В
последнем Поттере из цветов остались только зеленый и синий могильных тонов.&lt;/p&gt;

&lt;p&gt;Я в курсе, зачем нужна коррекция, и я за то, когда ее применяют по
делу. Например, в классической “Матрице”, когда действие происходит в программе,
все зеленое. Когда герои перемещаются в реальный мир — цветное. Коррекцией
выделяют особые моменты, например сны, кошмары или катастрофы. Коррекция нужна
для компоузинга, чтобы актеры, фон и эффекты были согласованы.&lt;/p&gt;

&lt;p&gt;Но сегодня такое чувство, что коррекцию ставят не задумываясь. Просто жахнули
корректирующий слой в редакторе, потому что так делают другие. В результате
цвета сузились до пещерных оттенков — серого, коричневого, бурого — и это
считается круто.&lt;/p&gt;

&lt;p&gt;Корректируют цвета в интервью, подкастах, обзорах техники — зачем? То же самое с
фотографиями, например свадебными. Их нужно прогнать через сто фильтров с
коррекцией. Сюда же эротика: снял ты красивое тело, молодец, но нет — нужно,
чтобы оно сливалось с интерьером, как хамелеон.&lt;/p&gt;

&lt;p&gt;Дизайнеры и монтажеры не понимают: когда одно и то же используется везде, оно
приедается и выглядит глупо.&lt;/p&gt;

&lt;p&gt;Замечаю такую же историю в играх. Запускаешь игрушку, пропускаешь логотипы и
вжух — экран моргает, и накладывается глобальная коррекция цветов. Синий
становится мокрым асфальтом, красный — бордовым, появляются серо-бурые
оттенки. Если свернуть игру, можно наблюдать эффект в операционке. Опять же,
зачем насильно глушить цвета? Кто просил?&lt;/p&gt;

&lt;p&gt;Коррекция нужна, но слишком часто я замечаю обратное.&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Nov 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/color-correction/</link>
        <guid isPermaLink="true">https://grishaev.me/color-correction/</guid>
        
        <category>color</category>
        
        <category>correction</category>
        
        <category>movies</category>
        
        
      </item>
    
      <item>
        <title>Память у Андроида (3)</title>
        <description>&lt;p&gt;И еще про Андроид. Я не хотел, но сама жизнь вынуждает.&lt;/p&gt;

&lt;p&gt;Этим утром обратилась женщина, друг семьи. Классика: телефон — Андроид, 32 гига,
забит под ноль фотками и видео всяких утренников. Вацап раздулся до 8
гигов. Женщина жила в таком режиме годами, телефон как-то шевелился. Но вот
приплыли: Вацап устарел, просит обновить. Женщина не понимает, что от нее хотят.&lt;/p&gt;

&lt;p&gt;Нажимаю “скачать”, Вацап перекидывает в Google Play. А там плашка: в целях
безопасности подтвердите аккаунт, запрашивает пароль к гугло-почте. Разумеется,
женщина не знает не то что пароль, а что такое гугло-аккаунт в принципе. Судя по
всему, этот аккаунт ей создали в отделении связи, где она покупала телефон.&lt;/p&gt;

&lt;p&gt;Сразу вопрос: какие именно “цели безопасности” преследует Гугл? В чем проблема
обновить приложение? Это же всем на пользу: Гуглу, производителю, пользователю.&lt;/p&gt;

&lt;p&gt;Пытаюсь подобрать пароль по фамилии и году рождения — Гугл не знает этой
почты. Возможно, удалил из-за неактивности. Пытаюсь создать новый акк — не
принимает российский номер.&lt;/p&gt;

&lt;p&gt;Ладно, качаю APK с сайта Вацапа. Разрешаю установку из сторонних
источников. Тыкаю на APK — он немного тупит, потом говорит, что не смог. Никаких
деталей, ошибок, все молчком. Я думал минут десять, ребутнул телефон и
догадался: бедняге не хватает места. А сказать об этом нельзя? Удалил левые
приложения, какой-то утренник — и APK поставился.&lt;/p&gt;

&lt;p&gt;Женщина видит Вацап и чуть не плачет от радости. У нее там родительский чат,
секции внуков, подруги детства, соседи, ТСЖ, работа, клиенты. Предлагает деньги,
еле отговорил. Представьте, что потеряли доступ к почте, на которой сидели 10
лет — вот так себя чувствовала она.&lt;/p&gt;

&lt;p&gt;Я смотрю на это и не понимаю: почему нельзя сделать так, чтобы человек просто
пользовался телефоном? Почему его нужно носить Ване-программисту, чтобы он
работал? Почему нельзя продумать сценарии, чтобы избежать таких ситуаций? Опять
пользователи не те попались?&lt;/p&gt;

&lt;p&gt;Я не настаиваю насчет компьютеров: они явно не для людей. Это техника для
обученного персонала. Но телефон, блин, это же повседневная вещь. Нам же
показывали в презентациях: тыкаешь пальчиком, и оно все само. А на практике
совсем не так. Неужели нам врали?&lt;/p&gt;

&lt;p&gt;Какой-то сплошной гиговский бред, и ничего больше.&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Nov 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/android-mem-3/</link>
        <guid isPermaLink="true">https://grishaev.me/android-mem-3/</guid>
        
        <category>android</category>
        
        <category>memory</category>
        
        <category>storage</category>
        
        
      </item>
    
      <item>
        <title>PG2 release 0.1.18</title>
        <description>
&lt;p&gt;&lt;a href=&quot;https://github.com/igrishaev/pg2&quot;&gt;PG2 version 0.1.18&lt;/a&gt; is available (it’s a client for Postgres). This
release brings two major features:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;built-in pgvector extension support;&lt;/li&gt;
  &lt;li&gt;better type mapping between Postgres and Clojure.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;pgvector-support&quot;&gt;PGVector Support&lt;/h2&gt;

&lt;p&gt;Pgvector is a &lt;a href=&quot;https://github.com/pgvector/pgvector&quot;&gt;well known extension&lt;/a&gt; for PostgreSQL. It provides a
fast and robust vector type which is quite useful for heavy
computations. Pgvector also provides a sparse version of a vector to save space.&lt;/p&gt;

&lt;p&gt;This section covers how to use types provided by the extension with PG2.&lt;/p&gt;

&lt;h3 id=&quot;vector&quot;&gt;Vector&lt;/h3&gt;

&lt;p&gt;First, install &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pgvector&lt;/code&gt; as the official readme file prescribes. Now that you
have it installed, try a simple table with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vector&lt;/code&gt; column:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jdbc/get-connection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/query&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;create temp table test (id int, items vector)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/execute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;insert into test values (1, '[1,2,3]')&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/execute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;insert into test values (2, '[1,2,3,4,5]')&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/execute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;select * from test order by id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; [{:id 1, :items &quot;[1,2,3]&quot;} {:id 2, :items &quot;[1,2,3,4,5]&quot;}]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It works, but we got the result unparsed: the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:items&lt;/code&gt; field in each row is a
string. This is because, to take a custom type into account when encoding and
decoding data, you need to specify something. Namely, pass the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:with-pgvector?&lt;/code&gt;
flag to the config map as follows:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:port&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5432&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:user&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:password&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:database&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:with-pgvector?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jdbc/get-connection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now the strings are parsed into a Clojure vector of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;double&lt;/code&gt; values:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/execute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;select * from test order by id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:items&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:items&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;4.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To insert a vector, pass it as a Clojure vector as well:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/execute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;insert into test values ($1, $2)&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:params&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It can be also a lazy collection of numbers produced by a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;map&lt;/code&gt; call:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/execute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;insert into test values ($1, $2)&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:params&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])]})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vector&lt;/code&gt; column above doesn’t have an explicit size. Thus, vectors of any
size can be stored in that column. You can limit the size by providing it in
parentheses:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/query&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;create temp table test2 (id int, items vector(5))&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now if you pass a vector of a different size, you’ll get an error response from
the database:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/execute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;insert into test2 values (1, '[1,2,3]')&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; Server error response: {severity=ERROR, code=22000, file=vector.c, line=77,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; function=CheckExpectedDim, message=expected 5 dimensions, not 3,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; verbosity=ERROR}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vector&lt;/code&gt; type supports both text and binary modes of PostgreSQL wire
protocol.&lt;/p&gt;

&lt;h3 id=&quot;sparse-vector&quot;&gt;Sparse Vector&lt;/h3&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pgvector&lt;/code&gt; extension provides a special &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sparsevec&lt;/code&gt; type to store vectors
where only certain elements are filled. All the rest elements are considered as
zero. For example, you have a vector of 1000 items where the 3rd item is 42.001,
and 10th item is 99.123. Storing it as a native vector of 1000 double numbers is
inefficient. It can be written as follows which takes much less:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{3:42.001,10:99.123}/1000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sparsevec&lt;/code&gt; Postgres type acts exactly like this: internally, it’s a sort of
a map that stores the size (1000) and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{index -&amp;gt; value}&lt;/code&gt; mapping. An
important note is that &lt;strong&gt;indexes are counted from one, not zero&lt;/strong&gt; (see the
README.md file of the extension for details).&lt;/p&gt;

&lt;p&gt;PG2 provides a special wrapper for a sparse vector. A brief demo:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/execute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;create temp table test3 (id int, v sparsevec)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/execute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;insert into test3 values (1, '{2:42.00001,7:99.00009}/9')&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/execute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;select * from test3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; [{:v &amp;lt;SparseVector {2:42.00001,7:99.00009}/9&amp;gt;, :id 1}]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v&lt;/code&gt; field above is an instance of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;org.pg.type.SparseVector&lt;/code&gt;
class. Let’s look at it closer:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;;; put it into a separate variable&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-sv&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/execute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;select * from test3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-sv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org.pg.type.SparseVector&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sv&lt;/code&gt; value has a number of interesting traits. To turn in into a native
Clojure map, just &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deref&lt;/code&gt; it:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-sv&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:nnz&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:index&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;42.00001&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;99.00009&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:dim&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It mimics the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nth&lt;/code&gt; access as the standard Clojure vector does:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;nth&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-sv&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; 0.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;nth&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-sv&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; 42.00001&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;nth&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-sv&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;; 0.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To turn in into a native vector, just pass it into the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vec&lt;/code&gt; function:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-sv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;42.00001&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;99.00009&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are several ways you can insert a sparse vector into the database. First,
pass an ordinary vector:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/execute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;insert into test3 values ($1, $2)&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:params&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Internally, zero values get eliminated, and the vector is transformed into a
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SparseVector&lt;/code&gt; instance. Now read it back:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/execute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;select * from test3 where id = 2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:v&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;&amp;lt;SparseVector&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:5.0,2:2.0,3:6.0,5:2.0,6:5.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/8&amp;gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The second way is to pass a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SparseVector&lt;/code&gt; instance produced by the
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pg.type/-&amp;gt;sparse-vector&lt;/code&gt; function. It accepts the size of the vector and a
mapping of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{index =&amp;gt; value}&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pg.type&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:as&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/execute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;insert into test3 values ($1, $2)&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:params&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;t/-&amp;gt;sparse-vector&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;523.23423&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                                              &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;623.52346&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})]})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, you can pass a string representation of a sparse vector:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pg/execute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;insert into test3 values ($1, $2)&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:params&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{1:5.0,2:2.0,3:6.0,5:2.0,6:5.0}/8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Like the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vector&lt;/code&gt; type, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sparsevec&lt;/code&gt; can be also limited to a certain size:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sparsevec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sparsevec&lt;/code&gt; type supports both binary and text Postgres wire protocol.&lt;/p&gt;

&lt;h3 id=&quot;custom-schemas&quot;&gt;Custom Schemas&lt;/h3&gt;

&lt;p&gt;The text above assumes you have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pgvector&lt;/code&gt; extension installed globally
meaning it is hosted in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public&lt;/code&gt; schema. Sometimes though, extensions are
setup per schema. For example only a schema named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sales&lt;/code&gt; has access to the
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pgvector&lt;/code&gt; extension but nobody else.&lt;/p&gt;

&lt;p&gt;If it’s your case and you installed &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pgvector&lt;/code&gt; into a certain schema, the
standard &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:with-pgvector?&lt;/code&gt; flag won’t work. By default, PG2 scans the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pg_types&lt;/code&gt;
table for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public.vector&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public.sparsevec&lt;/code&gt; types. Since the schema
name is not &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public&lt;/code&gt; but &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sales&lt;/code&gt;, you need to specify it by passing a special
option called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:type-map&lt;/code&gt;. It’s a map where keys are fully qualified type names
(either a keyword or a string), and values are predefined instances of the
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IProcessor&lt;/code&gt; interface:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:port&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5432&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:user&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:password&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:database&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:type-map&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sales.vector&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t/vector&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sales.sparsevec&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t/sparsevec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can rely on keywords as well:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:port&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5432&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:user&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:password&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:database&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:type-map&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:sales/vector&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t/vector&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:sales/sparsevec&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t/sparsevec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;t&lt;/code&gt; alias references the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pg.type&lt;/code&gt; namespace.&lt;/p&gt;

&lt;p&gt;Now if you install the extension into the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;statistics&lt;/code&gt; schema as well, add it
into the map:&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:port&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5432&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:user&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:password&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:database&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:type-map&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:sales/vector&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t/vector&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:sales/sparsevec&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t/sparsevec&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:statistics/vector&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t/vector&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:statistics/sparsevec&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t/sparsevec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Should you make a mistake in a fully qualified type name, it will be ignored,
and you’ll get value from the database unparsed. The actual value depends on the
binary encoding and decoding options of a connection. By default, it uses text
protocol so you’ll get a string like “[1, 2, 3]”. For binary encoding and
decoding, you’ll get a byte array that holds raw Postgres payload.&lt;/p&gt;

&lt;h2 id=&quot;custom-type-processors&quot;&gt;Custom Type Processors&lt;/h2&gt;

&lt;p&gt;PG2 version 0.1.18 has the entire type system refactored. It introduces a
conception of type processors which allows to connect Postgres types with
Java/Clojure ones with ease.&lt;/p&gt;

&lt;p&gt;When reading data from Postgres, the client knows only the OID of a type of a
column. This OID is just an integer number points to a certain type. The default
builtin types are hard-coded in Postgres, and thus their OIDs are known in
advance.&lt;/p&gt;

&lt;p&gt;Say, it’s for sure that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int4&lt;/code&gt; type has OID 23, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;text&lt;/code&gt; has
OID 25. That’s true for any Postgres installation. Any Postgres client has a
kind of a hash map or a Enum class with these OIDs.&lt;/p&gt;

&lt;p&gt;Things get worse when you define custom types. These might be either enums or
complex types defined by extensions: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pgvector&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;postgis&lt;/code&gt; and so on. You cannot
guess OIDs of types any longer because they are generated in runtime. Their
actual values depend on a specific machine. On prod, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public.vector&lt;/code&gt; type
has OID 10541, on pre-prod it’s 9621, and in Docker you’ll get 1523.&lt;/p&gt;

&lt;p&gt;Moreover, a type name is unique only across a schema that’s holding it. You can
easily have two different enum types called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;status&lt;/code&gt; defined in various
schemas. Thus, relying on a type name is not a good option unless it’s fully
qualified.&lt;/p&gt;

&lt;p&gt;To deal with all said above, a new conception of type mapping was introduced.&lt;/p&gt;

&lt;p&gt;First, if a certain OID is builtin (meaning it exists the list of predefined
OIDs), it gets processed as before.&lt;/p&gt;

&lt;p&gt;When you connect to a database, you can pass a mapping like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{schema.typename =&amp;gt;
Processor}&lt;/code&gt;. When pg2 has established a connection, it executes an internal
query to discover type mapping. Namely, it reads the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pg_type&lt;/code&gt; table to get OIDs
that have provided schemas and type name. The query looks like this:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pg_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_namespace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nspname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;typname&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pg_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_namespace&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;where&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pg_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;typnamespace&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_namespace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oid&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_namespace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nspname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;typname&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'schema1.type1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'schema2.type2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It returns pairs of OID and the full type name:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;121512 | schema1.type1
 21234 | schema2.type2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now PG2 knows that the OID 121512 specifies &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;schema1.type1&lt;/code&gt; but nothing else.&lt;/p&gt;

&lt;p&gt;Finally, from the map &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{schema.typename =&amp;gt; Processor}&lt;/code&gt; you submitted before, PG2
builds a map &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{OID =&amp;gt; Processor}&lt;/code&gt;. If the OID is not a default one, it checks
this map trying to find a processor object.&lt;/p&gt;

&lt;p&gt;A processor object is an instance of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;org.pg.processor.IProcessor&lt;/code&gt;
interface, or, if more precisely, an abstract &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AProcessor&lt;/code&gt; which is partially
implemented. It has four methods:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;ByteBuffer&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;encodeBin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;nc&quot;&gt;CodecParams&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;codecParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;encodeTxt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;nc&quot;&gt;CodecParams&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;codecParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;decodeBin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ByteBuffer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CodecParams&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;codecParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;decodeTxt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;nc&quot;&gt;CodecParams&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;codecParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Depending on whether you’re decoding (reading) the data or encoding them
(e.g. passing parameters), and the current format (text or binary), a
corresponding method is called. By extending all four methods, you can handle
any type you want.&lt;/p&gt;

&lt;p&gt;At the moment, there are about 25 processors implementing standard types:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int2&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int4&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;text&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;float4&lt;/code&gt;, and so on. Find them in the
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pg-core/src/java/org/pg/processor&lt;/code&gt; directory. There is also a couple of
processors for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pgvector&lt;/code&gt; extension in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pgvector&lt;/code&gt; subdirectory.&lt;/p&gt;

&lt;p&gt;The next step is to implement processors for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;postgis&lt;/code&gt; extension.&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Nov 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/en/pg-version-1.18/</link>
        <guid isPermaLink="true">https://grishaev.me/en/pg-version-1.18/</guid>
        
        <category>programming</category>
        
        <category>sql</category>
        
        <category>clojure</category>
        
        <category>postgres</category>
        
        
      </item>
    
      <item>
        <title>Память у Андроида (2)</title>
        <description>&lt;p&gt;Продолжение &lt;a href=&quot;/android-mem-1/&quot;&gt;прошлой заметки&lt;/a&gt; про Андроид.&lt;/p&gt;

&lt;p&gt;На мой взгляд, 90 процентов всех телефонов страдают от нехватки места. Сценарий
один и тот же: человек покупает телефон и фотографирует каждый каждый угол. Еще
он ставит три мессенджера, и в каждом ему присылают прикольные видосы и
гифки. Проходит полгода, и места не остается.&lt;/p&gt;

&lt;p&gt;Человек запускает менеджер очистки, но это сплошное издевательство. Менеджер
говорит: у тебя занято 20 гигов фотками и видео, удаляй сам. А так я могу
очистить временные файлы на сумму 30 мегабайтов.&lt;/p&gt;

&lt;p&gt;Я проходил это десять раз, не меньше. Покупаешь телефон маме, жене, детям,
родственникам — и через полгода они приходят к тебе с вопросом “закончилось
место”. Ты скидываешь фотки на комп, и на год тебя оставляют в покое.&lt;/p&gt;

&lt;p&gt;Я понимаю, проблему с местом было трудно предсказать, когда Андроид только
вышел. Но на третий-четвертый год это стало очевидно: места никогда не хватает,
аппетиты пользователей растут, ровно и как возможности приложений.&lt;/p&gt;

&lt;p&gt;Принято считать, что за местом должен следить пользователь: регулярно смотреть
статистику, удалять файлы, настраивать кеши в мессенджерах. Да, некоторые это
делают. Но как должны справляться с этим обычные люди? Скажем, чтобы настроить
кеш в Телеграме, нужно нажать многоточие, потом гайку, потом смотаться до Data &amp;amp;
Storage, и там выставить опции. Вы считаете, ваша мама это сделает? А потом то
же самое в Вацапе и Вайбере?&lt;/p&gt;

&lt;p&gt;Когда я на это жалуюсь, мне говорят — что ты хотел? Тут ничего не поделаешь. А
на самом деле поделать можно много чего.&lt;/p&gt;

&lt;p&gt;Заботу о диске должна брать на себя операционная система. Во-первых, если
свободного места меньше 70%, то старые фотки уменьшаются в
разрешении. Современные телефоны производят джипеги по 3-7 магабайтов — такие
фотографии можно печатать в натуральный рост. Это, мягко говоря, избыточно для
экрана размером с ладонь. Когда места перестает хватать, старые фотки сжимаются
до 700 килобайт, освобождая от 2.5 до 5 магабайтов. Сто фоток — полгига.&lt;/p&gt;

&lt;p&gt;Разумеется, этот процесс должен действовать тонко, а именно: брать самые
неиспользуемые фотки; пропускать те, которые отмеченные лайком или которые
пользователь часто открывает. Это не подойдет свадебным фотографом, но и
организация фото у таких людей выстроена не так, как у обывателей.&lt;/p&gt;

&lt;p&gt;То же самое с видео: если сейчас ночь, и заряд батареи выше порога, то берется
старое видео и перегоняется в низкое разрешение. Как и в случае с джипегами, на
экране размером в ладонь никто не заметит разницы, а это дает 200-300 мегов с
каждого ролика.&lt;/p&gt;

&lt;p&gt;Насчет кешей и разбухающих приложений. Ожидать, что человек откроет каждое
приложение и все настроит — идиотизм. Когда системе не хватает места, она
рассылает приложениям системный вызов а-ля “срочно удали кеши”. Можно добавить
параметр — уровень критичности. Если он зеленый, то можно ничего не удалять,
если желтый — удалить все данные, кроме последнего месяца, если красный — то
все.&lt;/p&gt;

&lt;p&gt;Вы скажете, что никто не будет этого делать. А между прочим, это в интересах
самих приложений. Потому что если на телефоне 2% свободного места, то
пользоваться условным Телеграмом невозможно. А если каждое приложение освободит
по 200-400 мегабайтов, то в сумме будет пара гигов, и телефон худо-бедно
заработает.&lt;/p&gt;

&lt;p&gt;Наконец, самое важное — старые данные можно удалять без спроса пользователя. Да,
вот так просто взять и удалить. Объяснение этому простое: представьте, что
человек собрался в компании и хочет снять видео. А места нет. И у нас выбор:
либо сказать, что места нет и заставить чистить файлы самому, либо удалить
фотографии пятилетней давности, которые человек ни разу не открывал. Что лучше?&lt;/p&gt;

&lt;p&gt;В большинстве случаев — второе, потому что человеку интересно то, что происходит
сейчас. Ему важно записать видео именно пока он в компании, а не удалять файлы,
пока остальные веселятся. Интерес к фото и видео можно представить как правую
половину гауссианы: она резко спадает во времени, и нет беды в том, чтобы
подчищать старье за пользователя.&lt;/p&gt;

&lt;p&gt;Если хотите, аналогия. Современные телефоны работают как резервуар: сначала он
наполняется, а если вливать больше, то польется мимо. Это неправильно: телефон
должен быть как проточный бассейн с входом и выходом. Когда в него вливается
сверх меры, то с другой стороны выливается.&lt;/p&gt;

&lt;p&gt;По такому принципу телефон может работать годами, не вынося владельцу мозг
нехваткой места.&lt;/p&gt;

&lt;p&gt;Допускаю, что есть программы, которые умеют что-то подобное, но это сторонние
программы, их нужно ставить, покупать, разбираться с ними. Нет из коробки — нет
как такового. А еще телефон, который вместо двух лет прослужил бы пять, мягко
говоря, не согласуется с бизнес-моделью всяких Гуглов, Ксяоми и прочих.&lt;/p&gt;

&lt;p&gt;Хочу лишь показать — многие вещи можно переосмыслить, и технически они
возможны. Дело в бизнесе и отношении к ним.&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Nov 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/android-mem-2/</link>
        <guid isPermaLink="true">https://grishaev.me/android-mem-2/</guid>
        
        <category>android</category>
        
        <category>memory</category>
        
        <category>storage</category>
        
        
      </item>
    
      <item>
        <title>Память у Андроида (1)</title>
        <description>&lt;p&gt;В Андроидах — я имею в виду телефоны — мне не нравится одна вещь, которая там с
рождения. Это вечная борьба с тем, кто и куда пишет: во внутреннюю память или на
сд-карту.&lt;/p&gt;

&lt;p&gt;Правило большого пальца: телефон всегда пишет не туда. А если сегодня туда, то
через месяц все слетит. Можно купить огромную SD-карту, чтобы не засорять
память, но телефон будет упорно писать в память, игнорируя карту.&lt;/p&gt;

&lt;p&gt;Еще есть настройка, куда по умолчанию ставить приложения. Это тоже важно, потому
что телеграмы-хромы раздуваются до пяти гигов.&lt;/p&gt;

&lt;p&gt;Разумеется, в Андроиде нет централизованной настройки, что и куда писать. Нужно
открыть камеру, многоточие, гайки и там выбрать SD-карту. Приложения
настраиваются отдельно — то ли в Google Play, то ли еще где. Перенос приложений
между памятью и картой — это кровавая боль. Нельзя выделить и перенести сразу
десять приложений. Нужно вручную останавливать каждое и переносить.&lt;/p&gt;

&lt;p&gt;Пишу это, потому что наболело. Жена пожаловалась, что телефон Xiaomi тормозит. В
нем 32 гига памяти, и дополнительно я вставил карту на 32 гига. Везде указал
приоритет записи на карту. И что вы думаете? Каким-то образом настройки слетели,
и память оказалась забита видео и фотками под ноль. На карте 20 гиг свободного
места, а телефон едва ворочается. Открывает менеджер диска, запускает
сканирование и говорит: могу освободить аж 30 мегабайтов за счет каких-то там
темповых файлов.&lt;/p&gt;

&lt;p&gt;Просто какая-то дичь. Что мешает переместить фотки на SD-карту в фоне?
Пользователь ничего не заметит. У нас везде ИИ, всякие модели, предсказание фраз
и покупок — и блин, телефон не может перетащить фотки. Он будет тормозить,
тупить, но ни в коем случае не решит проблему.&lt;/p&gt;

&lt;p&gt;Это беда каждого Андроида: за пять тысяч рублей, за пятьдесят, за сто
пятьдесят. Она была пятнадцать лет назад, когда я купил первый смарт на втором
Андроиде. Она есть сейчас, она будет еще через пятнадцать лет.&lt;/p&gt;

&lt;p&gt;Я согласен, что иметь память и съемную карту удобно в техническом плане. Но на
практике это напоминает Линукс: вы &lt;strong&gt;можете&lt;/strong&gt; настроить что угодно, и поэтому
&lt;strong&gt;всегда будете&lt;/strong&gt; настраивать все, что угодно.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/android-mem-2/&quot;&gt;Продолжение&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Nov 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/android-mem-1/</link>
        <guid isPermaLink="true">https://grishaev.me/android-mem-1/</guid>
        
        <category>android</category>
        
        <category>memory</category>
        
        <category>storage</category>
        
        
      </item>
    
      <item>
        <title>Авторское право</title>
        <description>&lt;p&gt;Интернет прощается со Стивером — анонимным создателем пиратской библиотеки
Флибуста. Я ей никогда не пользовался, но краем уха слышал о сообществе и
создателе. Его уверенность в своем деле вызывала уважение, ровно как и
добровольный уход из жизни методом эвтаназии — не каждый решится на этот шаг.&lt;/p&gt;

&lt;p&gt;Его уход напомнил мне об отношению к авторскому праву. На мой взгляд, любое
авторское право должно быть конечным и не передаваться по наследству. Это
работает так: в течение десяти-двадцати лет ты продаешь книгу, получаешь
гонорар. Но потом она становится достоянием общественности, и ее можно печатать
и продавать кому угодно. Можно снять фильм или сериал, использовать персонажей в
любом сеттинге, не опасаясь судебных исков.&lt;/p&gt;

&lt;p&gt;Двадцати лет авторства более чем достаточно, чтобы выручить денег за
произведение. Этого хватит на проживание и пенсию. Может даже хватить на
обучение детям и покупку им квартир-машин.&lt;/p&gt;

&lt;p&gt;Более важный факт — авторское право не должно передаваться по наследству. Мне
кажется бредовой ситуация, когда условная внучка Агаты Кристи указывает
издательствам, что и когда печатать, а также вносит правки в соответствии с
повесткой из телевизора. Так и хочется ей сказать: дорогая, а не пошла бы ты в
жопу? Произведения Кристи — классика, с какой стати тебе наживаться на таланте
бабушки?&lt;/p&gt;

&lt;p&gt;То же самое я бы сказал Успенскому, который судится из-за персонажей
“Простоквашино”. Формально ты автор, но персонажи ушли в народ, стали
фольклором. Придумай новых персонажей и зарабатывай на них. Хочешь, чтобы как у
Чижа — “всю жизнь получать гонорар”?&lt;/p&gt;

&lt;p&gt;То же самое касается фильмов, сериалов, научных статей, книг, комиксов,
фотографий, рисунков… продолжите список сами.&lt;/p&gt;

&lt;p&gt;Объяснение простое: каждый продукт основан на опыте прошлых поколений. Общий
уровень развития общества, язык, городской дизайн — все это создает фон, рельеф,
на котором формируются продукты. Посчитать и оценить его
невозможно. Представьте, что Кирилл и Мефодий ожили и требуют отчислений с
каждого продукта за использование кириллицы? Это примерно то, что происходит
сегодня.&lt;/p&gt;

&lt;p&gt;То же самое относится к айтишным продуктам. Каждые 10-20 лет разработчик
лишается авторского права на продукт, и он становится общественным. Нужно
уточнить — не на сегодняшний продукт, а его прошлую версию. Другими словами,
Windows 10 по-прежнему остается коммерческой и закрытой, а Windows XP обязаны
передать в общественное достояние. И через 10-15 лет то же самое произойдет с
Windows 10.&lt;/p&gt;

&lt;p&gt;Разумеется, сегодня это звучит глупо и даже преступно. Но возможно, появится
государство, где будет иной взгляд на авторское право, и оно сможет
сосуществовать с другими государствами. В конец концов, современный взгляд на
право не должен считаться конечным — по аналогии, еще 300 лет назад люди не
представляли себе общество без рабства. Не нужно быть такими же — все вопросы,
даже самые щекотливые, нужно время от времени пересматривать.&lt;/p&gt;
</description>
        <pubDate>Tue, 29 Oct 2024 00:00:00 +0000</pubDate>
        <link>https://grishaev.me/no-copyright/</link>
        <guid isPermaLink="true">https://grishaev.me/no-copyright/</guid>
        
        <category>copyright</category>
        
        <category>books</category>
        
        <category>life</category>
        
        
      </item>
    
  </channel>
</rss>
